#!/bin/bash

env_clean(){
for i in DIR MAJOR MINOR OS RELEASE FIRST_DIGIT SECOND_DIGIT CONCURRENCY_LEVEL V4L_VERSION
do
if ! [ -z ${i+x} ]; then
  unset $i
fi
done
}

die(){
    echo -en "
\E[1;33;44m$1, aborting...\E[0m

"
    env_clean
    exit 1
}

die_unknown(){
    echo -en "
\E[1;33;44mUnknown option \"$1\".

run ./configure --help for valid options\E[0m

"
    env_clean
    exit 1
}

_patch(){
if ! [ "$?" -eq "0" ]; then
  echo "
Could not apply the patch.
Aborting...
"
  env_clean
  exit 1
fi
}

confirmno(){
    # call with a prompt string or use a default
    read -r -p "${1:-Are you sure? [y/N]} " response
    case $response in
        [yY][eE][sS]|[yY]) 
            true
            ;;
        *)
            false
            ;;
    esac
}

confirmyes(){
    # call with a prompt string or use a default
    read -r -p "${1:-Continue? [Y/n]} " response
    case $response in
        [yY][eE][sS]|[yY]) 
            true
            ;;
        [nN][oO]|[nN])
            false
            ;;
        *)
            true
            ;;
    esac
}

kernelconfig(){
echo -en "
Choise: use supplied config file or
do 'make oldconfig'. Do you want to
use supplied kernel config?

If you hit 'n', 'make oldconfig' starts.

"
    # call with a prompt string or use a default
    read -r -p "${1:-Yes, use it. [Y/n]} " response
    case $response in
        [yY][eE][sS]|[yY]) 
            cp -f ../kernelconfig/amd64/$MAJOR.$MINOR/config ./.config
            ;;
        [nN][oO]|[nN])
            make oldconfig
            ;;
        *)
            cp -f ../kernelconfig/amd64/$MAJOR.$MINOR/config ./.config
            ;;
    esac
}

show_help(){
  echo " Usage: ./configure --opt1=<opt> --opt2=<opt>"
  echo "                        "
  echo " Options: [default], if any, in brackets after option."
  echo "                        "
  echo " --help                 Print this message"
  echo "                        "
  echo " --stock=<opt>          [yes] When running a Debian/Ubuntu stock kernel,"
  echo "                        recompile it with dvbloopback driver and dvb-core patch."
  echo "                        "
  echo " --vanilla=<bool>       Specify a the vanilla kernel version you"
  echo "                        want to compile. Like --vanilla=4.1.8"
  echo "                        This disables the --stock= flag."
  echo "                        "
  echo " --headers=<opt>        [yes] no: don't install kernel headers package(s)."
  echo "                        "
  echo " --v4l=<opt>            [no] yes: compile current official v4l tree"
  echo "                        against your running kernel."
  echo "                        endriss: use Oliver Endriss' sources."
  echo "                        Disables --stock= and --vanilla= flags."
  echo "                        Warning: using the --v4l flag is not recommended."
  echo "                        "
  echo " --next=<opt>           [no] 4.1 : compile linux-next."
  echo "                        This version number should be >= current RC version."
  echo "                        disables --v4l, --vanilla and --stock flags, no headers."
  echo "                        Warning: using the --next flag can corrupt your system"
  echo "                        "
  echo " --adapters=<opt>       [16] Set max number of adapters that are allowed,"
  echo "                        twice the number of your physical adapters is needed."
  echo "                        "
  echo " --update=<opt>         [yes] no: don't auto-update or clean this repo."
  echo "                        "
  echo " --drivers=<opt>        [yes] no: don't add support for TBS 6281/6285"
  echo "                        and DVBSky T982 cards."
  echo "                        "
  echo " --dvb=<opt>            [dvbc] Set si2168 primary mode to DVB-C permanently."
  echo "                        dvbt: same, but set it to DVB-T."
  echo "                        dvbt2: set it to DVB-T2."
  echo "                        no: don't do anything to s2168."
  echo "                        This is only for progs like MythTV, that can't handle"
  echo "                        multistandard frontends."
  echo "                        MythTV only sees the primary DVB system."
  echo "                        "
  echo " --abi=<opt>            [900] Debian/Ubuntu only kernel version tweak."
  echo "                        Only set this option if you realy know what you do."
  echo "                        "
  echo " --debug=<opt>          [no] yes: pause to review (almost) each and every step."
  echo "                        "
  echo " --tvh=<opt>            [no] yes: don't insert dvbloopback, tvh does not need it"
  echo "                        Setting --tvh to yes disables --ffdecsawrapper flag"
  echo "                        "
  echo " --ffdecsawrapper=<opt> [yes] no: don't offer to compile ffdecsawrapper binary,"
  echo "                        even if you don't have it."
  echo "                        "
  echo " --ffdecsaconf=<opt>    If you know what you are doing, you can pass any flag to"
  echo "                        ./configure of FFdecsawrapper you like."
  echo "                        "
  exit 0
}

stock_opt="yes"
vanilla_opt=""
headers_opt="yes"
v4l_opt="no"
next_opt="no"
adapters_opt="16"
update_opt="yes"
abi_opt="900"
debug_opt="no"
drivers_opt="yes"
dvb_opt="dvbc"
tvh_opt="no"
ffdecsawrapper_opt="yes"
usercopy_opt="0"
ffdecsaconf_opt=""

for opt do
  optval="${opt#*=}"
  case "$opt" in
  --help) show_help
  ;;
  --stock=*) stock_opt="$optval"
  ;;
  --vanilla=*) stock_opt="no"; v4l_opt="no"; vanilla_opt="$optval"
  ;;
  --headers=*) headers_opt="$optval"
  ;;
  --v4l=*) stock_opt="no"; vanilla_opt=""; v4l_opt="$optval"
  ;;
  --next=*) stock_opt="no"; v4l_opt="no"; headers_opt="no"; next_opt="$optval"; vanilla_opt="$next_opt"
  ;;
  --adapters=*) adapters_opt="$optval"
  ;;
  --update=*) update_opt="$optval"
  ;;
  --abi=*) abi_opt="$optval"
  ;;
  --debug=*) debug_opt="$optval"
  ;;
  --drivers=*) drivers_opt="$optval"
  ;;
  --dvb=*) dvb_opt="$optval"
  ;;
  --tvh=*) tvh_opt="$optval"
  ;;
  --ffdecsawrapper=*) ffdecsawrapper_opt="$optval"
  ;;
  --usercopy=*) usercopy_opt="$optval"
  ;;
  --ffdecsaconf=*) ffdecsaconf_opt="$optval"
  ;;
  *)
  die_unknown $opt
  ;;
  esac
done

export abi_opt

DIR=`pwd`

# Check git status
if [ "x$update_opt" = "xyes" ]; then
  rm -rf linux* > /dev/null 2>&1
  rm -rf media* > /dev/null 2>&1
  rm -rf descrambler > /dev/null 2>&1
  git clean -xfd > /dev/null
  git reset --hard HEAD > /dev/null
  git remote update > /dev/null 2>&1
  if ! [ "$?" -eq "0" ]; then
    echo -en "
\E[1;33;44m
###################################

Error(s) encountered while updating

the status from remote git repo.

Aborting...

####################################
\E[0m

"
    env_clean
    exit 1
  fi
  LOCAL=$(git rev-parse @{0})
  REMOTE=$(git rev-parse @{u})
  BASE=$(git merge-base @{0} @{u})

  if [ $LOCAL = $REMOTE ]; then
    GITSTATUS="0"    # "Up-to-date"
  elif [ $LOCAL = $BASE ]; then
    GITSTATUS="1"    # "Need to pull"
  elif [ $REMOTE = $BASE ]; then
    GITSTATUS="2"    # "Need to push"
  else
    GITSTATUS="3"    # "Diverged"
  fi
  if [ "$GITSTATUS" -eq "0" ]; then
    echo "
Your local clone is clean and up-to-date
"
    if [ "x$debug_opt" = "xno" ]; then
      sleep 3
    fi
    if [ "x$debug_opt" = "xyes" ]; then
      confirmyes
      if [ "$?" != "0" ]; then
        env_clean
        exit 0
      fi
    fi
  elif [ "$GITSTATUS" -eq "1" ]; then
    echo "
Going to sync your local clone with updated remote repo.

"
    sleep 3
    git pull > /dev/null
    if ! [ "$?" -eq 0 ]; then
      echo -en "
\E[1;33;44m
###################################

Error(s) encountered while syncing

local with remote git repo

Aborting...

####################################
\E[0m

"
      env_clean
      exit 1
    else
      echo -en "

############################################################

Synced with remote repo successfully! Please rerun

./configure to complete installation of dvbloopback drivers.

Arrow up and enter will get you there.

############################################################


"
      env_clean
      exit 0
    fi
  elif [ "$GITSTATUS" -eq "2" -o "$GITSTATUS" -eq "3" ]; then
    echo -en "
\E[1;33;44m
######################################

Your local clone cannot be synced with

remote repo. Please get a fresh clone.

Aborting...

######################################
\E[0m

"
    env_clean
    exit 1
  fi    
fi

# Make sure that we are running as root
if ! echo "$(whoami)" | grep "root" > /dev/null 2>&1; then
  echo -en "
\E[1;33;44m
You should run as root.

Aborting...
\E[0m

"
  env_clean
  exit 0
fi

# Get info on what distro we are running
if [ -f /usr/bin/lsb_release ]; then
  OS=$( lsb_release -si )
  RELEASE=$( lsb_release -sc )
  if ! [ "$OS" = "Debian" -o "$OS" = "Ubuntu" ]; then
    if ! [ -f "/etc/arch-release" ] > /dev/null  2>&1; then
      drivers_opt="no"
    fi
  fi
else
  if ! [ -f "/etc/arch-release" ] > /dev/null  2>&1; then
    drivers_opt="no"
  fi
fi

# Check for a supported kernelversion
if ! [ "x$v4l_opt" = "xendriss" ]; then
  if ! [ "x$v4l_opt" = "xno" ]; then
    if ! [ "x$v4l_opt" = "xyes" ]; then
      V4L_VERSION=$(echo $v4l_opt | grep -o '[[:digit:]]\+' | awk 'NR==2')
    fi
    FIRST_DIGIT=$(echo `uname -r` | grep -o '[[:digit:]]\+' | head -n1)
    SECOND_DIGIT=$(echo `uname -r` | grep -o '[[:digit:]]\+' | awk 'NR==2')
    if ! [ "x$v4l_opt" = "xyes" ]; then
      if [ "$FIRST_DIGIT" -lt "4" ]; then
        echo "
Minimum supported kernel series is 4.1.x

Aborting...
"
        exit 1
      elif [ "$FIRST_DIGIT" -lt "5" ] && [ "$SECOND_DIGIT" -lt "1" ]; then
        echo "
Minimum supported kernel series is 4.1.x

Aborting...
"
        exit 1
      fi
    else
      if [ "$FIRST_DIGIT" -lt "4" ]; then
        if [ "$SECOND_DIGIT" -lt "10" ]; then
          echo "
Your running kernel is < 3.10.x

Minimum supported version is 3.10.x

Aborting...
"
          env_clean
          exit 0
        fi
      fi
    fi
  elif ! [ "x$vanilla_opt" = "x" ]; then
    MAJOR=$(echo "$vanilla_opt" | cut -d'.' -f1)
    MINOR=$(echo "$vanilla_opt" | cut -d'.' -f2 | cut -d'-' -f1)
    export MAJOR
    export MINOR
    if [ "$MAJOR" -lt "3" ]; then
      echo -en "
You requested a build for a $vanilla_opt kernel.

Minimum supported kernelseries is 3.10.x

Aborting...
"
      env_clean
      exit 0
    fi
    if [ "x$drivers_opt" = "xyes" ]; then
      if [ "$MAJOR" -eq "3" ]; then
        if ! [ "$MINOR" -eq "10" -o "$MINOR" -eq "18" ]; then
          echo -en "
You are trying to compile TBS 6281/6285 and DVBSky T982 drivers directly

into a $vanilla_opt vanilla kernel, using the --drivers=yes flag.

I only backported the DVBSky T982 driver to 3.10.x and 3.18.x vanilla kernel

series and Debian Jessie's stock kernel (3.16.x).


Aborting...
"
          env_clean
          exit 0
        fi
      fi
    else
      if [ "$MAJOR" -eq "3" ]; then
        if [ "$MINOR" -lt "10" ]; then
          echo "
Your are trying to build a $vanilla_opt kernel.

Minimum supported version is 3.10.x

Aborting...
"
          env_clean
          exit 0
        fi
      fi
    fi
  fi
fi

# Check for proper use of --stock= flag
if ! [ "$OS" = "Debian" -o "$OS" = "Ubuntu" ]; then
  if [ "x$stock_opt" = "xyes" ]; then
    echo "

Compiling a distro's stock kernel is supported

in Debian and Ubuntu only. You can compile the

v4l tree or a vanilla kernel. Aborting....

"
    env_clean
    exit 0
  fi
fi

# Get build-deps, Debian only.
if [ "$OS" = "Debian" -o "$OS" = "Ubuntu" ]; then
  if [ "x$v4l_opt" = "xendriss" ]; then
    if ! dpkg-query -l mercurial | grep "ii" > /dev/null 2>&1; then
      echo "
Missing dependency mercurial, marking for installation.

"
      apt-get install mercurial -y || die "Error installing dependency mercurial"
    fi
  fi
  if ! dpkg-query -l build-essential | grep "ii" > /dev/null 2>&1; then
    echo "
Missing dependency build-essential, marking for installation.

"
    apt-get install build-essential -y || die "Error installing dependency build-essential"
  fi
  if ! dpkg-query -l asciidoc | grep "ii" > /dev/null 2>&1; then
    echo "
Missing dependency asciidoc, marking for installation.

"
    apt-get install asciidoc --no-install-recommends -y || die "Error installing dependency asciidoc"
  fi
  if ! dpkg-query -l binutils-dev | grep "ii" > /dev/null 2>&1; then
    echo "
Missing dependency binutils-dev, marking for installation.

"
    apt-get install binutils-dev --no-install-recommends -y || die "Error installing dependency binutils-dev"
  fi
  if ! dpkg-query -l bison | grep "ii" > /dev/null 2>&1; then
    echo "
Missing dependency bison, marking for installation.

"
    apt-get install bison --no-install-recommends -y || die "Error installing dependency bison"
  fi
  if ! dpkg-query -l crash | grep "ii" > /dev/null 2>&1; then
    echo "
Missing dependency crash, marking for installation.

"
    apt-get install crash --no-install-recommends -y || die "Error installing dependency crash"
  fi
  if ! dpkg-query -l devscripts | grep "ii" > /dev/null 2>&1; then
    echo "
Missing dependency devscripts, marking for installation.

"
    apt-get install devscripts --no-install-recommends -y || die "Error installing dependency devscripts"
  fi
  if ! dpkg-query -l libelf-dev | grep "ii" > /dev/null 2>&1; then
    echo "
Missing dependency libelf-dev, marking for installation.

"
    apt-get install libelf-dev --no-install-recommends -y || die "Error installing dependency libelf-dev"
  fi
  if ! dpkg-query -l fakeroot | grep "ii" > /dev/null 2>&1; then
    echo "
Missing dependency fakeroot, marking for installation.

"
    apt-get install fakeroot --no-install-recommends -y || die "Error installing dependency fakeroot"
  fi
  if ! dpkg-query -l flex | grep "ii" > /dev/null 2>&1; then
    echo "
Missing dependency flex, marking for installation.

"
    apt-get install flex --no-install-recommends -y || die "Error installing dependency flex"
  fi
  if ! dpkg-query -l initramfs-tools | grep "ii" > /dev/null 2>&1; then
    echo "
Missing dependency initramfs-tools, marking for installation.

"
    apt-get install initramfs-tools --no-install-recommends -y || die "Error installing dependency initramfs-tools"
  fi
  if ! dpkg-query -l kernel-package | grep "ii" > /dev/null 2>&1; then
    echo "
Missing dependency kernel-package, marking for installation.

"
    apt-get install kernel-package --no-install-recommends -y || die "Error installing dependency kernel-package"
  fi
  if ! dpkg-query -l kernel-wedge | grep "ii" > /dev/null 2>&1; then
    echo "
Missing dependency kernel-wedge, marking for installation.

"
    apt-get install kernel-wedge --no-install-recommends -y || die "Error installing dependency kernel-wedge"
  fi
  if ! dpkg-query -l libdigest-sha-perl | grep "ii" > /dev/null 2>&1; then
    echo "
Missing dependency libdigest-sha-perl, marking for installation.

"
    apt-get install libdigest-sha-perl --no-install-recommends -y || die "Error installing dependency libdigest-sha-perl"
  fi
  if ! dpkg-query -l libfile-fcntllock-perl | grep "ii" > /dev/null 2>&1; then
    echo "
Missing dependency libfile-fcntllock-perl, marking for installation.

"
    apt-get install libfile-fcntllock-perl --no-install-recommends -y || die "Error installing dependency libfile-fcntllock-perl"
  fi
  if ! dpkg-query -l libproc-processtable-perl | grep "ii" > /dev/null 2>&1; then
    echo "
Missing dependency libproc-processtable-perl, marking for installation.

"
    apt-get install libproc-processtable-perl --no-install-recommends -y || die "Error installing dependency libproc-processtable-perl"
  fi
  if ! dpkg-query -l bin86 | grep "ii" > /dev/null 2>&1; then
    echo "
Missing dependency bin86, marking for installation.

"
    apt-get install bin86 --no-install-recommends -y || die "Error installing dependency bin86"
  fi
  if ! dpkg-query -l makedumpfile | grep "ii" > /dev/null 2>&1; then
    echo "
Missing dependency makedumpfile, marking for installation.

"
    apt-get install makedumpfile --no-install-recommends -y || die "Error installing dependency makedumpfile"
  fi
  if ! dpkg-query -l libncurses5 | grep "ii" > /dev/null 2>&1; then
    echo "
Missing dependency libncurses5, marking for installation.

"
    apt-get install libncurses5 --no-install-recommends -y || die "Error installing dependency libncurses5"
  fi
  if ! dpkg-query -l libncurses5-dev | grep "ii" > /dev/null 2>&1; then
    echo "
Missing dependency libncurses5-dev, marking for installation.

"
    apt-get install libncurses5-dev --no-install-recommends -y || die "Error installing dependency libncurses5-dev"
  fi
  if ! dpkg-query -l patch | grep "ii" > /dev/null 2>&1; then
    echo "
Missing dependency patch, marking for installation.

"
    apt-get install patch --no-install-recommends -y || die "Error installing dependency patch"
  fi
  if ! dpkg-query -l patchutils | grep "ii" > /dev/null 2>&1; then
    echo "
Missing dependency patchutils, marking for installation.

"
    apt-get install patchutils --no-install-recommends -y || die "Error installing dependency patchutils"
  fi
  apt-get build-dep --no-install-recommends linux -y
  if ! [ "$?" -eq "0" ]; then
    echo "
Error(s) while installing build dependencies

Aborting...
"
    env_clean
    exit 1
  fi
  if ! [ "x$v4l_opt" = "xno" ]; then
    if ! dpkg-query -l linux-headers-`uname -r` | grep "ii" > /dev/null 2>&1; then
      if ! [ -d /lib/modules/`uname -r`/build/drivers ]; then
        apt-get install linux-headers-`uname -r`
      fi
    fi
    if ! [ "$?" -eq "0" ]; then
      echo "
Error(s) while installing kernel headers, or no kernel source available.

Aborting...
"
      env_clean
      exit 1
    fi
  fi
fi

#
# Download descrambler repo and run ./configure
#

if [ "x$ffdecsawrapper_opt" = "xyes" ]; then
  if [ "x$tvh_opt" = "xno" ]; then
    git clone -b stable https://github.com/bas-t/descrambler.git && cd descrambler
    ./configure $ffdecsaconf_opt
    if [ "$?" != "0" ]; then
      echo -en "
Error(s) encountered while compiling ffdecsawrapper.

Continue anyway?
"
      confirmyes
      if [ "$?" != "0" ]; then
        cd $DIR
        env_clean
        exit 0
      fi
    fi
    if [ "x$debug_opt" = "xyes" ]; then
      echo "
You have either chosen not to (re)compile ffdecsawrapper,

or ffdecsawrapper is (re)compiled and installed.
"
      confirmyes
      if [ "$?" != "0" ]; then
        cd $DIR
        env_clean
        exit 0
      fi
    fi
    cd $DIR
  fi
fi

#
# Get the source
#

# Debian
if [ "x$stock_opt" = "xyes" ]; then
  echo "
Going to download the kernel source.
"
  sleep 3
  apt-get source linux -y || die "Error(s) while fetching Debian Linux source"
  cd linux-*
  FIRST_DIGIT=$(echo `pwd` | awk -F/ '{print $NF}' | grep -o '[[:digit:]]\+' | head -n1 | awk 'NR==1')
  SECOND_DIGIT=$(echo `pwd` | awk -F/ '{print $NF}' | grep -o '[[:digit:]]\+' | head -n2 | awk 'NR==2')
  if [ "$FIRST_DIGIT" -eq "3" ] && [ "$SECOND_DIGIT" -eq "13" ]; then
    drivers_opt="no"
  fi
  if [ "$FIRST_DIGIT" -lt "4" ]; then
    if ! [ "$SECOND_DIGIT" -eq "16" ]; then
      if [ "x$drivers_opt" = "xyes" ]; then
        echo "
You requested a (re)build of a Debian/Ubuntu $FIRST_DIGIT.$SECOND_DIGIT kernel with extra drivers.

Building Debian/Ubuntu stock kernels with  TBS 6281/6285 and DVBSky T982 support in-tree in the

3.x kernel series is only supported for 3.16.x kernels. If you don't need those extra drivers, do:

./configure --drivers=no

If you are running Ubuntu 14.04 LTS, and need the extra drivers, you could 'sudo apt-get install linux-image-generic-lts-utopic', reboot with it and run ./configure again.

linux-image-generic-lts-utopic is a 3.16.x kernel and qualifies for the extra drivers.

If you are (still) running Debian Wheezy, with a >=3.10.x kernel, either upgrade to Jessie, or get your 3.16 kernel from backports (not recommended).

Aborting...
"
        env_clean
        exit 1
      fi
    fi
  fi
  if [ "$FIRST_DIGIT" -gt "3" ]; then
    if ! cat drivers/media/Kconfig | grep "BROKEN" > /dev/null 2>&1; then
      echo "
Mauro may have decided that \"MEDIA_CONTROLLER_DVB\" is not broken anymore.
Review the situation and act.
Aborting...
"
      env_clean
      exit 0
    fi
  fi
  if [ "x$debug_opt" = "xyes" ]; then
    echo "
Source is downloaded.
"
    confirmyes
    if [ "$?" != "0" ]; then
      env_clean
      exit 0
    fi
  fi
fi

# v4l
if [ "x$v4l_opt" != "xno" ]; then
  echo "
Going to clone the v4l buildsystem of choise.
"
  sleep 3

  if [ "x$v4l_opt" = "xyes" ];then
    git clone git://linuxtv.org/media_build.git || die "Error(s) while fetching v4l build system"
    git clone --depth=1 git://linuxtv.org/media_tree.git || die "Error(s) while fetching v4l source tree"
    if ! cat media_tree/drivers/media/Kconfig | grep "BROKEN" > /dev/null 2>&1; then
      echo "
Mauro may have decided that \"MEDIA_CONTROLLER_DVB\" is not broken anymore.
Review the situation and act.
Aborting...
"
      env_clean
      exit 0
    fi
    if [ "x$debug_opt" = "xyes" ]; then
      echo "
Source is downloaded.
"
      confirmyes
      if [ "$?" != "0" ]; then
        env_clean
        exit 0
      fi
    fi
  elif [ "x$v4l_opt" = "xendriss" ];then
    hg clone http://linuxtv.org/hg/~endriss/media_build_experimental
  else
    git clone git://github.com/bas-t/media_build.git || die "Error(s) while fetching v4l build system"
    git clone --depth=1 -b $v4l_opt git://github.com/bas-t/linux-stable.git media_tree || die "Error(s) while fetching v4l source tree"
    if [ "x$debug_opt" = "xyes" ]; then
      echo "
Source is downloaded.
"
      confirmyes
      if [ "$?" != "0" ]; then
        env_clean
        exit 0
      fi
    fi
  fi
  if ! [ "x$v4l_opt" = "xendriss" ];then
    cd media_tree
  fi
fi

# Vanilla
if [ "x$vanilla_opt" != "x" ]; then
  echo "
Going to download the kernel source.
"
  sleep 3
  if [ "x$next_opt" = "xno" ]; then
    if echo "$vanilla_opt" | grep "rc" > /dev/null 2>&1; then
      wget https://www.kernel.org/pub/linux/kernel/v$MAJOR.x/testing/linux-$vanilla_opt.tar.xz || die "Error(s) while fetching Linux source"
    else
      wget https://www.kernel.org/pub/linux/kernel/v$MAJOR.x/linux-$vanilla_opt.tar.xz || die "Error(s) while fetching Linux source"
    fi
    tar -xJf linux-$vanilla_opt.tar.xz
    cd linux-$vanilla_opt
    if [ "$MAJOR" -eq "4" ] && [ "$MINOR" -gt "0" ]; then
      if ! cat drivers/media/Kconfig | grep "BROKEN" > /dev/null 2>&1; then
        echo "
Mauro may have decided that \"MEDIA_CONTROLLER_DVB\" is not broken anymore.
Review the situation and act.
Aborting...
"
        env_clean
        exit 0
      fi
    fi
    make clean && make mrproper
    if [ "x$debug_opt" = "xyes" ]; then
      echo "
Source is downloaded.
"
      confirmyes
      if [ "$?" != "0" ]; then
        env_clean
        exit 0
      fi
    fi
  fi
fi

# linux-next
if ! [ "x$next_opt" = "xno" ]; then
  git clone --depth=1 git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git ./linux-$next_opt || die "Error(s) while fetching Linux source"
  cd linux-$next_opt
  make clean && make mrproper
  if [ "x$debug_opt" = "xyes" ]; then
    echo "
Source is downloaded.
"
    confirmyes
    if [ "$?" != "0" ]; then
      env_clean
      exit 0
    fi
  fi
fi

#
# Patch the source
#

# All
if ! [ "x$usercopy_opt" = "x0" ]; then
  patch --directory=.. -p0 < ../usercopy-import.patch
  _patch
  patch -p0 < ../usercopy-export.patch
  _patch
  if [ "x$debug_opt" = "xyes" ]; then
    echo "
usercopy patches aplied.
"
    confirmyes
    if [ "$?" != "0" ]; then
      env_clean
      exit 0
    fi
  fi
fi
if [ "x$usercopy_opt" = "x1" ]; then
  patch -p0 < ../usercopy-failsafe.patch
  _patch
  if [ "x$debug_opt" = "xyes" ]; then
    echo "
usercopy failsafe patch applied.
"
    confirmyes
    if [ "$?" != "0" ]; then
      env_clean
      exit 0
    fi
  fi
fi

# Common (stock and vanilla kernels)
if [ "x$v4l_opt" = "xno" ]; then
  FIRST_DIGIT=$(echo `pwd` | awk -F/ '{print $NF}' | grep -o '[[:digit:]]\+' | head -n1 | awk 'NR==1')
  SECOND_DIGIT=$(echo `pwd` | awk -F/ '{print $NF}' | grep -o '[[:digit:]]\+' | head -n2 | awk 'NR==2')

  # dvbloopback patch
  if [ "x$tvh_opt" = "xno" ]; then
    mkdir drivers/media/pci/dvbloopback
    cp -f ../dvbloopback/* drivers/media/pci/dvbloopback/
    patch -p1 < ../dvbloopback.patch
    _patch
    if [ "$FIRST_DIGIT" -lt "4" ]; then
      if [ "$SECOND_DIGIT" -lt "13" ]; then
        patch -p0 < ../3.7-dvb-core.patch
        _patch
      else
        patch -p0 < ../3.13-dvb-core.patch
        _patch
      fi
    else
      patch -p0 < ../3.13-dvb-core.patch
      _patch
    fi
    if [ "x$debug_opt" = "xyes" ]; then
      echo "
dvb-core is patched, dvbloopback added.
"
      confirmyes
      if [ "$?" != "0" ]; then
        env_clean
        exit 0
      fi
    fi
  fi

  # saa716x patch
  if [ "x$drivers_opt" = "xyes" ];then
    mkdir drivers/media/pci/saa716x
    cp -f ../drivers/media/pci/saa716x/* drivers/media/pci/saa716x/
    if [ "$FIRST_DIGIT" -lt "4" ];then
      if [ "$SECOND_DIGIT" -eq "10" ];then
        patch -p0 < ../Kconfig-3.10.patch
        _patch
      elif [ "$SECOND_DIGIT" -eq "18" ];then
        patch -p0 < ../Kconfig-3.18.patch
        _patch
      else
        patch -p0 < ../Kconfig.patch
        _patch
      fi
    elif [ "$FIRST_DIGIT" -eq "4" ]; then
      if [ "$SECOND_DIGIT" -lt "2" ]; then
        patch -p0 < ../Kconfig.patch
        _patch
      else
        patch -p0 < ../Kconfig-4.2.patch
        _patch
      fi
    fi
    if [ "x$debug_opt" = "xyes" ]; then
      echo "
saa716x added, Kconfig patched for saa716x.
"
      confirmyes
      if [ "$?" != "0" ]; then
        env_clean
        exit 0
      fi
    fi
    if [ "$FIRST_DIGIT" -lt "4" ]; then
      if [ "$SECOND_DIGIT" = "16" ]; then
        patch -p0 < ../Makefile-3.16.patch
        _patch
      elif [ "$SECOND_DIGIT" = "10" ]; then
        patch -p0 < ../Makefile-3.10.patch
        _patch
      else
        patch -p0 < ../Makefile.patch
        _patch
      fi
    elif [ "$FIRST_DIGIT" -eq "4" ]; then
      if [ "$SECOND_DIGIT" -lt "2" ]; then
        patch -p0 < ../Makefile.patch
        _patch
      else
        patch -p0 < ../Makefile-4.2.patch
        _patch
      fi
    fi
    if [ "x$debug_opt" = "xyes" ]; then
      echo "
Makefile is patched for saa716x.
"
      confirmyes
      if [ "$?" != "0" ]; then
        env_clean
        exit 0
      fi
    fi
  fi

  # cx23885 patch
  if [ "x$drivers_opt" = "xyes" ];then
    if [ "$FIRST_DIGIT" -lt "4" ]; then
      if [ "$SECOND_DIGIT" = "18" ]; then
        patch -p0 < ../cx23885-3.18.patch
        _patch
      elif [ "$SECOND_DIGIT" = "16" ]; then
        patch -p0 < ../cx23885-3.16.patch
        _patch
      elif [ "$SECOND_DIGIT" = "10" ]; then
        patch -p0 < ../cx23885-3.10.patch
        _patch
      fi
    elif [ "$FIRST_DIGIT" -eq "4" ]; then
      if [ "$SECOND_DIGIT" -lt "2" ]; then
        patch -p0 < ../cx23885-4.0.patch
        _patch
      else
        patch -p0 < ../cx23885-gapped-clock.patch
        _patch
      fi
    elif [ "$FIRST_DIGIT" -gt "4" ]; then
      patch -p0 < ../cx23885-gapped-clock.patch
      _patch
    fi
    if [ "x$debug_opt" = "xyes" ]; then
      echo "
cx23885 patch applied.
"
      confirmyes
      if [ "$?" != "0" ]; then
        env_clean
        exit 0
      fi
    fi
  fi

  # silabs si2157 and si2168 patch
  if [ "x$drivers_opt" = "xyes" ];then
    if [ "$FIRST_DIGIT" -lt "4" ]; then
      cp -f ../drivers/media/tuners/* drivers/media/tuners/
      cp -f ../drivers/media/dvb-frontends/* drivers/media/dvb-frontends/
      if [ "x$debug_opt" = "xyes" ]; then
        echo "
si2168 and si2157 added/updated.
"
        confirmyes
        if [ "$?" != "0" ]; then
          env_clean
          exit 0
        fi
      fi
    elif [ "$FIRST_DIGIT" -eq "4" ]; then
      if [ "$SECOND_DIGIT" -lt "3" ]; then
        cp -f ../drivers/media/tuners/* drivers/media/tuners/
        cp -f ../drivers/media/dvb-frontends/* drivers/media/dvb-frontends/
        if [ "x$debug_opt" = "xyes" ]; then
          echo "
si2168 and si2157 added/updated.
"
          confirmyes
          if [ "$?" != "0" ]; then
            env_clean
            exit 0
          fi
        fi
      fi
    fi

    # silabs si2168 DVB-C/T patch
    if [ "x$dvb_opt" = "xdvbc" ]; then
      sed -i 's/SYS_DVBT, SYS_DVBT2, SYS_DVBC_ANNEX_A/SYS_DVBC_ANNEX_A/' drivers/media/dvb-frontends/si2168.c
    elif [ "x$dvb_opt" = "xdvbt" ]; then
      sed -i 's/SYS_DVBT, SYS_DVBT2, SYS_DVBC_ANNEX_A/SYS_DVBT, SYS_DVBT2, SYS_DVBC_ANNEX_A/' drivers/media/dvb-frontends/si2168.c
    elif [ "x$dvb_opt" = "xdvbt2" ]; then
      sed -i 's/SYS_DVBT, SYS_DVBT2, SYS_DVBC_ANNEX_A/SYS_DVBT2, SYS_DVBT, SYS_DVBC_ANNEX_A/' drivers/media/dvb-frontends/si2168.c
    fi
    if [ "x$dvb_opt" = "xdvbc" -o "x$dvb_opt" = "xdvbt" -o "x$dvb_opt" = "xdvbt2" ]; then
      if [ "x$debug_opt" = "xyes" ]; then
        echo "
Primary DVB system for si2168 is set to $dvb_opt 
"
        confirmyes
        if [ "$?" != "0" ]; then
          env_clean
          exit 0
        fi
      fi
    fi
    # vb2 patch
    if [ "$FIRST_DIGIT" -eq "3" -a "$SECOND_DIGIT" -lt "19" ]; then
      patch -p0 < ../vb2-1.patch
      _patch
    elif [ "$FIRST_DIGIT" -eq "4" -a "$SECOND_DIGIT" -lt "4" ]; then
      patch -p0 < ../vb2.patch
      _patch
      if [ "x$debug_opt" = "xyes" ]; then
        echo "
vb2 patch applied. 
"
        confirmyes
        if [ "$?" != "0" ]; then
          env_clean
          exit 0
        fi
      fi
    fi
  fi
fi

# v4l
if ! [ "x$v4l_opt" = "xno" ]; then
  if ! [ "x$v4l_opt" = "xendriss" ];then
    # dvbloopback patch
    if [ "x$tvh_opt" = "xno" ]; then
      mkdir drivers/media/pci/dvbloopback
      cp -f ../dvbloopback/* drivers/media/pci/dvbloopback/
      patch -p1 < ../dvbloopback.patch
      _patch
      if [ "x$debug_opt" = "xyes" ]; then
        echo "
dvbloopback module added to source tree.
"
        confirmyes
        if [ "$?" != "0" ]; then
          env_clean
          exit 0
        fi
      fi
      if ! [ "$V4L_VERSION" = "10" ]; then
        patch -p0 < ../3.13-dvb-core.patch
        _patch
      else
        patch -p0 < ../3.7-dvb-core.patch
        _patch
      fi
      if [ "x$debug_opt" = "xyes" ]; then
        echo "
dvb-core is patched.
"
        confirmyes
        if [ "$?" != "0" ]; then
          env_clean
          exit 0
        fi
      fi
    fi

    # DVBSky T982 support
    if [ "x$drivers_opt" = "xyes" ]; then
      if ! [ "x$v4l_opt" = "xyes" ]; then
        cp -f ../drivers/media/tuners/* drivers/media/tuners/
        cp -f ../drivers/media/dvb-frontends/* drivers/media/dvb-frontends/
        if [ "x$debug_opt" = "xyes" ]; then
          echo "
si2168 and si2157 added/updated.
"
          confirmyes
          if [ "$?" != "0" ]; then
            env_clean
            exit 0
          fi
        fi
        if [ "$V4L_VERSION" = "18" ]; then
          patch -p0 < ../cx23885-3.18.patch
          _patch
        elif [ "$V4L_VERSION" = "10" ]; then
          patch -p0 < ../cx23885-3.10.patch
          _patch
        fi
      fi
    fi

    # saa716x patch
    if [ "x$drivers_opt" = "xyes" ];then
      mkdir drivers/media/pci/saa716x
      cp -f ../drivers/media/pci/saa716x/* drivers/media/pci/saa716x/
      if [ "$V4L_VERSION" = "10" ]; then
        patch -p0 < ../Kconfig-3.10.patch
        _patch
      elif [ "$V4L_VERSION" = "18" ]; then
        patch -p0 < ../Kconfig-3.18.patch
        _patch
      else
        patch -p0 < ../Kconfig-4.2.patch
        _patch
      fi
      if [ "x$debug_opt" = "xyes" ]; then
        echo "
saa716x added, Kconfig patch for saa716x applied.
"
        confirmyes
        if [ "$?" != "0" ]; then
          env_clean
          exit 0
        fi
      fi
      if [ "$V4L_VERSION" = "10" ]; then
        patch -p0 < ../Makefile-3.10.patch
        _patch
      elif [ "$V4L_VERSION" = "18" ]; then
        patch -p0 < ../Makefile.patch
        _patch
      else
        patch -p0 < ../Makefile-4.2.patch
      _patch
      fi
      if [ "x$debug_opt" = "xyes" ]; then
      echo "
Makefile patch for saa716x applied.
"
        confirmyes
        if [ "$?" != "0" ]; then
          env_clean
          exit 0
        fi
      fi
    fi
    if [ "x$v4l_opt" = "xyes" ]; then
      patch -p0 < ../cx23885-gapped-clock.patch
      _patch
      if [ "x$debug_opt" = "xyes" ]; then
        echo "
cx23885 gapped-clock patch applied.
"
        confirmyes
        if [ "$?" != "0" ]; then
          env_clean
          exit 0
        fi
      fi
    fi

    # silabs si2168 DVB-C/T patch
    if [ "x$dvb_opt" = "xdvbc" ]; then
      sed -i 's/SYS_DVBT, SYS_DVBT2, SYS_DVBC_ANNEX_A/SYS_DVBC_ANNEX_A/' drivers/media/dvb-frontends/si2168.c
    elif [ "x$dvb_opt" = "xdvbt" ]; then
      sed -i 's/SYS_DVBT, SYS_DVBT2, SYS_DVBC_ANNEX_A/SYS_DVBT, SYS_DVBT2, SYS_DVBC_ANNEX_A/' drivers/media/dvb-frontends/si2168.c
    elif [ "x$dvb_opt" = "xdvbt2" ]; then
      sed -i 's/SYS_DVBT, SYS_DVBT2, SYS_DVBC_ANNEX_A/SYS_DVBT2, SYS_DVBT, SYS_DVBC_ANNEX_A/' drivers/media/dvb-frontends/si2168.c
    fi
    if [ "x$dvb_opt" = "xdvbc" -o "x$dvb_opt" = "xdvbt" -o "x$dvb_opt" = "xdvbt2" ]; then
      if [ "x$debug_opt" = "xyes" ]; then
        echo "
Primary DVB system for si2168 is set to $dvb_opt 
"
        confirmyes
        if [ "$?" != "0" ]; then
          env_clean
          exit 0
        fi
      fi
    fi

    # commit patches
    git add -A
    if [ "x$tvh_opt" = "xno" ]; then
      git commit -a -m 'Add drivers, patch dvb-core.'
    else
      git commit -a -m 'Add drivers.'
    fi
    if [ "x$debug_opt" = "xyes" ]; then
      echo "
Patches are committed to media_tree.
"
      confirmyes
      if [ "$?" != "0" ]; then
        env_clean
        exit 0
      fi
    fi

    cd ../media_build

    # make install patch
    if [ "x$v4l_opt" = "xyes" ]; then
      patch -p0 < ../v4l-make-install.patch
      _patch
      if [ "x$debug_opt" = "xyes" ]; then
        echo "
make install patch applied to media_build repo.
"
        confirmyes
        if [ "$?" != "0" ]; then
          env_clean
          exit 0
        fi
      fi
    else
      git checkout 3.$V4L_VERSION
    fi

    # commit patch
    if [ "x$v4l_opt" = "xyes" ]; then
      git commit -a -m 'Install drivers in /lib/modules/`uname -r`/updates/media'
      if [ "x$debug_opt" = "xyes" ]; then
        echo "
Patches are committed to media_build.
"
        confirmyes
        if [ "$?" != "0" ]; then
          env_clean
          exit 0
        fi
      fi
    fi
  else
    cd media_build_experimental
    make download
    make untar
    if ! cat linux/drivers/media/Kconfig | grep "BROKEN" > /dev/null 2>&1; then
      patch -p0 < ../endriss_01.patch
      _patch
    fi
    mkdir linux/drivers/media/pci/dvbloopback
    cp -f ../dvbloopback/* linux/drivers/media/pci/dvbloopback/
    patch -p0 < ../dvbloopback.patch
    _patch
  fi
fi

#
# Configure the source
#

# Are we running amd64 or what?
if uname -a | grep "x86_64" > /dev/null 2>&1; then
  CONFIG="amd64"
else
  CONFIG="i386"
fi

# Debian
if [ "x$stock_opt" = "xyes" ]; then
  if [ "$OS" = "Debian" ]; then
    if [ "$abi_opt" = "900" ]; then
      DEBIANKERNEL=$(echo `pwd` | awk -F/ '{print $NF}' | grep -o '[[:digit:]]\+\.[[:digit:]]\+')
      if [ "$CONFIG" = "amd64" ]; then
        RUNNING=$(uname -r | grep "90[0-9]-amd64")
        if [ -d /lib/modules/$DEBIANKERNEL.0-900-amd64 ]; then
          if ! [ -d /lib/modules/$DEBIANKERNEL.0-901-amd64 ]; then
            abi_opt="901"
          elif ! [ -d /lib/modules/$DEBIANKERNEL.0-902-amd64 ]; then
            abi_opt="902"
          elif ! [ -d /lib/modules/$DEBIANKERNEL.0-903-amd64 ]; then
            abi_opt="903"
          elif ! [ -d /lib/modules/$DEBIANKERNEL.0-904-amd64 ]; then
            abi_opt="904"
          elif ! [ -d /lib/modules/$DEBIANKERNEL.0-905-amd64 ]; then
            abi_opt="905"
          elif ! [ -d /lib/modules/$DEBIANKERNEL.0-906-amd64 ]; then
            abi_opt="906"
          elif ! [ -d /lib/modules/$DEBIANKERNEL.0-907-amd64 ]; then
            abi_opt="907"
          elif ! [ -d /lib/modules/$DEBIANKERNEL.0-908-amd64 ]; then
            abi_opt="908"
          elif ! [ -d /lib/modules/$DEBIANKERNEL.0-909-amd64 ]; then
            abi_opt="909"
          else
            if [ "$RUNNING" = "" ]; then
              echo "

You have a total of 10 \"$DEBIANKERNEL.0-90x-amd64\" kernels installed.
Not going to install any more of those, aborting...
"
              env_clean
              exit 0
            else
              echo  "

You have a total of 10 \"$DEBIANKERNEL.0-90x-amd64\" kernels installed.
You are currently running the $RUNNING version.
Not going to install any more of those, aborting...
"
              env_clean
              exit 0
            fi 
          fi
        fi
      else
        RUNNING=$(uname -r | grep "90[0-9]-686-pae")
        if [ -d /lib/modules/$DEBIANKERNEL.0-900-686-pae ]; then
          if ! [ -d /lib/modules/$DEBIANKERNEL.0-901-686-pae ]; then
            abi_opt="901"
          elif ! [ -d /lib/modules/$DEBIANKERNEL.0-902-686-pae ]; then
            abi_opt="902"
          elif ! [ -d /lib/modules/$DEBIANKERNEL.0-903-686-pae ]; then
            abi_opt="903"
          elif ! [ -d /lib/modules/$DEBIANKERNEL.0-904-686-pae ]; then
            abi_opt="904"
          elif ! [ -d /lib/modules/$DEBIANKERNEL.0-905-686-pae ]; then
            abi_opt="905"
          elif ! [ -d /lib/modules/$DEBIANKERNEL.0-906-686-pae ]; then
            abi_opt="906"
          elif ! [ -d /lib/modules/$DEBIANKERNEL.0-907-686-pae ]; then
            abi_opt="907"
          elif ! [ -d /lib/modules/$DEBIANKERNEL.0-908-686-pae ]; then
            abi_opt="908"
          elif ! [ -d /lib/modules/$DEBIANKERNEL.0-909-686-pae ]; then
            abi_opt="909"
          else
            if [ "$RUNNING" = "" ]; then
              echo "

You have a total of 10 \"$DEBIANKERNEL.0-90x-686-pae\" kernels installed.
Not going to install any more of those, aborting...
"
              env_clean
              exit 0
            else
              echo  "

You have a total of 10 \"$DEBIANKERNEL.0-90x-686-pae\" kernels installed.
You are currently running the $RUNNING version.
Not going to install any more of those, aborting...
"
              env_clean
              exit 0
            fi 
          fi
        fi
      fi
    fi
    _ABINAME=$(cat debian/config/defines | grep 'abiname:' | awk -F"[ ]" '{ print $NF }')
    export _ABINAME
    sed -i "s/abiname: $_ABINAME/abiname: $abi_opt/" debian/config/defines
    sed -i "s/-$_ABINAME/-$abi_opt/g" debian/rules.gen
    fakeroot debian/rules debian/control-real
    sed -i "s/DEBUG='True'/DEBUG='FALSE'/g" debian/rules.gen
    if [ "$CONFIG" = "amd64" ]; then
      fakeroot make -f debian/rules.gen setup_amd64_none_amd64
      sed -i "s/CONFIG_DVB_MAX_ADAPTERS=8/CONFIG_DVB_MAX_ADAPTERS=$adapters_opt/" debian/build/build_amd64_none_amd64/.config
    else
      fakeroot make -f debian/rules.gen setup_i386_none_686-pae_real
      sed -i "s/CONFIG_DVB_MAX_ADAPTERS=8/CONFIG_DVB_MAX_ADAPTERS=$adapters_opt/" debian/build/build_i386_none_686-pae/.config
    fi
    if [ "x$debug_opt" = "xyes" ]; then
      echo "
Kernel configured.
"
      confirmyes
      if [ "$?" != "0" ]; then
        env_clean
        exit 0
      fi
    fi
  elif [ "$OS" = "Ubuntu" ]; then
    chmod a+x debian/scripts/*
    chmod a+x debian/scripts/misc/*
    sed -i "s/CONFIG_DVB_MAX_ADAPTERS=8/CONFIG_DVB_MAX_ADAPTERS=$adapters_opt/" debian.*/config/config.common.ubuntu
    sed -i "/CONFIG_DVB_LNBP22=m/a CONFIG_DVB_LOOPBACK_ADAPTER=m" debian.*/config/config.common.ubuntu
    if [ "x$drivers_opt" = "xyes" ]; then
      sed -i "/CONFIG_DVB_S921=m/a CONFIG_DVB_SAA716X_CORE=m" debian.*/config/config.common.ubuntu
      sed -i "/CONFIG_DVB_SAA716X_CORE=m/a CONFIG_SAA716X_BUDGET=m" debian.*/config/config.common.ubuntu
    fi
    fakeroot debian/rules updateconfigs
    UBUNTUKERNEL=$(echo `pwd` | awk -F/ '{print $NF}' | grep -o '[[:digit:]]\+\.[[:digit:]]\+')
    _ABINAME=$(cat debian/changelog | head -1 | grep -o '[[:digit:]]\+' | head -4 | awk 'NR==4')
    _ABINAME_SUB=$(ls debian.master/abi | head -1 | cut -d'.' -f 4)
    export _ABINAME
    if [ "$abi_opt" = "900" ]; then
      RUNNING=$(uname -r | grep "90[0-9]-generic")
      if [ -d /lib/modules/$UBUNTUKERNEL.0-900-generic ]; then
        if ! [ -d /lib/modules/$UBUNTUKERNEL.0-901-generic ]; then
          abi_opt="901"
        elif ! [ -d /lib/modules/$UBUNTUKERNEL.0-902-generic ]; then
          abi_opt="902"
        elif ! [ -d /lib/modules/$UBUNTUKERNEL.0-903-generic ]; then
          abi_opt="903"
        elif ! [ -d /lib/modules/$UBUNTUKERNEL.0-904-generic ]; then
          abi_opt="904"
        elif ! [ -d /lib/modules/$UBUNTUKERNEL.0-905-generic ]; then
          abi_opt="905"
        elif ! [ -d /lib/modules/$UBUNTUKERNEL.0-906-generic ]; then
          abi_opt="906"
        elif ! [ -d /lib/modules/$UBUNTUKERNEL.0-907-generic ]; then
          abi_opt="907"
        elif ! [ -d /lib/modules/$UBUNTUKERNEL.0-908-generic ]; then
          abi_opt="908"
        elif ! [ -d /lib/modules/$UBUNTUKERNEL.0-909-generic ]; then
          abi_opt="909"
        else
          if [ "$RUNNING" = "" ]; then
            echo "

You have a total of 10 \"$UBUNTUKERNEL.0-90x-generic\" kernels installed.
Not going to install any more of those, aborting...
"
            env_clean
            exit 0
          else
            echo  "

You have a total of 10 \"$UBUNTUKERNEL.0-90x-generic\" kernels installed.
You are currently running the $RUNNING version.
Not going to install any more of those, aborting...
"
            env_clean
            exit 0
          fi 
        fi
      fi
    fi
    sed -i "s/0-$_ABINAME/0-$abi_opt/g" debian/control
    sed -i "s/0-$_ABINAME/0-$abi_opt/g" debian/control.stub
    sed -i "s/0-$_ABINAME/0-$abi_opt/g" debian/changelog
    sed -i "s/0-$_ABINAME/0-$abi_opt/g" debian.*/control
    sed -i "s/0-$_ABINAME/0-$abi_opt/g" debian.*/control.stub
    sed -i "s/0-$_ABINAME/0-$abi_opt/g" debian.*/changelog
    fakeroot debian/rules clean
    mv debian.master/abi/$UBUNTUKERNEL.0-$_ABINAME.$_ABINAME_SUB debian.master/abi/$UBUNTUKERNEL.0-$abi_opt.$_ABINAME_SUB
    if [ "x$debug_opt" = "xyes" ]; then
      echo "
Kernel configured.
"
      confirmyes
      if [ "$?" != "0" ]; then
        env_clean
        exit 0
      fi
    fi
  fi
fi

# v4l
if ! [ "x$v4l_opt" = "xno" ]; then
  if ! [ "x$v4l_opt" = "xendriss" ];then
    make dir DIR=../media_tree
  fi
  make distclean
  make allyesconfig
  sed -i "s/CONFIG_DVB_MAX_ADAPTERS=8/CONFIG_DVB_MAX_ADAPTERS=$adapters_opt/" v4l/.config
  #sed -i "s/CONFIG_MEDIA_CONTROLLER_DVB=y/# CONFIG_MEDIA_CONTROLLER_DVB is not set/" v4l/.config
  if [ "x$debug_opt" = "xyes" ]; then
    echo "
v4l source configured.
"
    confirmyes
    if [ "$?" != "0" ]; then
      env_clean
      exit 0
    fi
  fi
fi

# Vanilla
if [ "x$vanilla_opt" != "x" ]; then
  echo -en "
Going to configure your $vanilla_opt vanilla kernel.

"
  if [ "$OS" = "Debian" ] && [ "$CONFIG" = "amd64" ]; then
    if [ -f ../kernelconfig/amd64/$MAJOR.$MINOR/config ]; then
      kernelconfig
    else
      make oldconfig
    fi
  else
    make oldconfig
  fi
  ADAPTERS=$(cat .config | grep "CONFIG_DVB_MAX_ADAPTERS" | grep -o '[[:digit:]]\+')
  if ! [ "$ADAPTERS" = "$adapters_opt" ]; then
    sed -i "s/CONFIG_DVB_MAX_ADAPTERS=$ADAPTERS/CONFIG_DVB_MAX_ADAPTERS=$adapters_opt/" .config
  fi
  #if cat .config | grep "CONFIG_MEDIA_CONTROLLER_DVB=y" > /dev/null 2>&1; then
    #sed -i "s/CONFIG_MEDIA_CONTROLLER_DVB=y/# CONFIG_MEDIA_CONTROLLER_DVB is not set/" .config
  #fi
  if [ "x$debug_opt" = "xyes" ]; then
    echo "
Kernel configured.
"
    confirmyes
    if [ "$?" != "0" ]; then
      env_clean
      exit 0
    fi
  fi
fi

#
# Compile the source
#

# Debian
if [ "x$stock_opt" = "xyes" ]; then
  if [ "$OS" = "Debian" ]; then
    if [ "$CONFIG" = "amd64" ]; then
      fakeroot make -f debian/rules.gen binary-arch_amd64_none_real
      if [ "x$debug_opt" = "xyes" ]; then
        fakeroot make -f debian/rules.gen binary-arch_amd64_none_amd64
      else
        fakeroot make -j2 -f debian/rules.gen binary-arch_amd64_none_amd64
      fi
    else
      fakeroot make -f debian/rules.gen binary-arch_i386_none_real
      if [ "x$debug_opt" = "xyes" ]; then
        fakeroot make -f debian/rules.gen binary-arch_i386_none_686-pae
      else
        fakeroot make -j2 -f debian/rules.gen binary-arch_i386_none_686-pae
      fi
    fi
    if ! [ "$?" -eq "0" ]; then
      echo "
Error(s) while compiling the kernel

Aborting...
"
      env_clean
      exit 1
    fi
    cd ..
    rm -f xen*
  elif [ "$OS" = "Ubuntu" ]; then
    AUTOBUILD=1 NOEXTRAS=1 skipabi=true fakeroot debian/rules binary-headers binary-generic
    if ! [ "$?" -eq "0" ]; then
      echo "
Error(s) while compiling the kernel

Aborting...
"
      env_clean
      exit 1
    fi
    cd ..
    rm -f linux-tools*
    rm -f linux-cloud*
  fi
  if [ "x$debug_opt" = "xyes" ]; then
    echo "
Kernel compiled.
"
    confirmyes
    if [ "$?" != "0" ]; then
      env_clean
      exit 0
    fi
  fi
fi

# v4l
if ! [ "x$v4l_opt" = "xno" ]; then
  make
  if ! [ "$?" -eq "0" ]; then
    echo "
Error(s) while compiling the v4l source.
This happens quite often, it is a common upstream problem.

Try again tomorrow, or in a couple of days,
the error(s) will probably be fixed upstream by then.

Aborting...
"
    env_clean
    exit 1
  fi
  if [ "x$debug_opt" = "xyes" ]; then
    echo "
v4l source compiled.
"
    confirmyes
    if [ "$?" != "0" ]; then
      env_clean
      exit 0
    fi
  fi
fi

# Vanilla
if [ "x$vanilla_opt" != "x" ]; then
  make-kpkg --rootcmd fakeroot clean
  if [ "x$debug_opt" = "xno" ]; then
    export CONCURRENCY_LEVEL=2
  fi
  if [ "x$next_opt" = "xno" ]; then
    make-kpkg --rootcmd fakeroot --initrd kernel_image kernel_headers
  else
    make-kpkg --rootcmd fakeroot --initrd kernel_image
  fi
  if ! [ "$?" -eq "0" ]; then
    echo "
Error(s) while compiling the kernel

Aborting...
"
    env_clean
    exit 1
  fi
  cd ..
  if [ "x$debug_opt" = "xyes" ]; then
    echo "
Kernel compiled.
"
    confirmyes
    if [ "$?" != "0" ]; then
      env_clean
      exit 0
    fi
  fi
fi

#
# Install the result
#

# Debian
if [ "x$stock_opt" = "xyes" ]; then
  if [ "x$headers_opt" = "xyes" ]; then
    if [ "x$debug_opt" = "xyes" ]; then
      echo "
Going to install your stock kernel and headers.
"
      confirmyes
      if [ "$?" != "0" ]; then
        env_clean
        exit 0
      fi
    fi
    dpkg -i *.deb
    apt-get -f install -y
  else
    if [ "x$debug_opt" = "xyes" ]; then
      echo "
Going to install your stock kernel.
"
      confirmyes
      if [ "$?" != "0" ]; then
        env_clean
        exit 0
      fi
    fi
    dpkg -i linux-image-*
  fi
  if [ "$OS" = "Debian" ]; then
    if [ "$CONFIG" = "amd64" ]; then
      echo "

Installed:

linux-image-$DEBIANKERNEL.0-$abi_opt-amd64"
      if [ "x$headers_opt" = "xyes" ]; then
        echo "linux-headers-$DEBIANKERNEL.0-$abi_opt-amd64
linux-headers-$DEBIANKERNEL.0-$abi_opt-common"
      fi
      echo "
All done, you should reboot NOW!

"
    else
      echo "

Installed:

linux-image-$DEBIANKERNEL.0-$abi_opt-686-pae"
      if [ "x$headers_opt" = "xyes" ]; then
        echo "linux-headers-$DEBIANKERNEL.0-$abi_opt-686-pae
linux-headers-$DEBIANKERNEL.0-$abi_opt-common"
      fi
      echo "
All done, you should reboot NOW!

"
    fi
  elif [ "$OS" = "Ubuntu" ]; then
    echo "
Installed:

linux-image-$UBUNTUKERNEL.0-$abi_opt-generic
linux-image-extra-$UBUNTUKERNEL.0-$abi_opt-generic"
    if [ "x$headers_opt" = "xyes" ]; then
      echo "linux-headers-$UBUNTUKERNEL.0-$abi_opt-generic
linux-headers-$UBUNTUKERNEL.0-$abi_opt"
    fi
    echo "
All done, you should reboot NOW!

"
  fi
fi

# v4l
if ! [ "x$v4l_opt" = "xno" ]; then
  if [ "x$debug_opt" = "xyes" ]; then
    echo "
Going to install v4l modules.
"
    confirmyes
    if [ "$?" != "0" ]; then
      env_clean
      exit 0
    fi
  fi
  if [ -d /lib/modules/`uname -r`/updates/media ]; then
    rm -rf /lib/modules/`uname -r`/updates/media
    depmod -a
  fi
  make install
  cd ..
fi

# Vanilla
if [ "x$vanilla_opt" != "x" ]; then
  if [ "x$debug_opt" = "xyes" ]; then
    echo "
Going to install your $vanilla_opt vanilla kernel.
"
    confirmyes
    if [ "$?" != "0" ]; then
      env_clean
      exit 0
    fi
  fi

  dpkg -i linux-image-* && sleep 2

  if ! [ "x$next_opt" = "xno" ]; then
    headers_opt="no"
  fi
  if [ "x$headers_opt" = "xyes" ]; then
    if [ "x$debug_opt" = "xyes" ]; then
      echo "
Going to link and install your $vanilla_opt kernel headers.
"
      confirmyes
      if [ "$?" != "0" ]; then
        env_clean
        exit 0
      fi
    fi
    if echo $vanilla_opt | grep "rc" > /dev/null 2>&1; then
      BUILDLINK="/lib/modules/$(ls -d1 */ | grep "linux" | sed 's/linux-//' | sed 's/-rc/.0-rc/')build"
      SOURCELINK="/lib/modules/$(ls -d1 */ | grep "linux" | sed 's/linux-//' | sed 's/-rc/.0-rc/')source"
      HEADERSDIR="/usr/src/$(ls -d1 */ | grep "linux" | sed 's/linux-/linux-headers-/' | sed 's/-r/.0-r/' | sed 's/\///')"
    elif echo $vanilla_opt | grep -o '[[:digit:]]\+\.[[:digit:]]\+\.[[:digit:]]\+' > /dev/null 2>&1; then
      BUILDLINK="/lib/modules/$(ls -d1 */ | grep "linux" | sed 's/linux-//')build"
      SOURCELINK="/lib/modules/$(ls -d1 */ | grep "linux" | sed 's/linux-//')source"
      HEADERSDIR="/usr/src/$(ls -d1 */ | grep "linux" | sed 's/linux-/linux-headers-/' | sed 's/\///')"
    else
      BUILDLINK="/lib/modules/$(ls -d1 */ | grep "linux" | sed 's/linux-//' | sed 's/\//.0\//')build"
      SOURCELINK="/lib/modules/$(ls -d1 */ | grep "linux" | sed 's/linux-//' | sed 's/\//.0\//')source"
      HEADERSDIR="/usr/src/$(ls -d1 */ | grep "linux" | sed 's/linux-/linux-headers-/' | sed 's/\//.0/')"
    fi
    rm -f $BUILDLINK
    rm -f $SOURCELINK
    ln -s $HEADERSDIR $SOURCELINK
    ln -s $HEADERSDIR $BUILDLINK
    dpkg -i linux-headers-*
  fi
  if [ "$?" = "0" ]; then
    if [ "x$headers_opt" = "xyes" ]; then
      echo -en "
Your $vanilla_opt vanilla kernel and headers are installed.

"
    else
      echo -en "
Your $vanilla_opt vanilla kernel is installed.

"
    fi
  fi
fi

if [ "x$drivers_opt" = "xyes" ]; then
  # Install the firmware
  if ! [ -f /lib/firmware/dvb-tuner-si2158-a20-01.fw ] > /dev/null 2>&1; then
    echo "
Do you want to install firmware into /lib/firmware?

"
    confirmyes "Yes, please do. [Y/n]"
    if [ "$?" = "0" ]; then   
      if [ ! -d /lib/firmware ]; then
        mkdir /lib/firmware
      fi
      cp -f firmware/* /lib/firmware/
    fi
  fi
  # Set msi mode for saa716x budget driver
  if ! cat /etc/modprobe.d/tbs_opensource.conf | grep "int_type=1" > /dev/null 2>&1; then
    echo "
Do you want to set \"options saa716x_budget int_type=1\"

and \"options dvb_core dvb_powerdown_on_sleep=0\"

in /etc/modprobe.d/tbs_opensource.conf?

"
    confirmyes "Yes, please do."
    if [ "$?" = "0" ]; then
      echo "options saa716x_budget int_type=1
options dvb_core dvb_powerdown_on_sleep=0" > /etc/modprobe.d/tbs_opensource.conf
    fi
  fi
fi
env_clean
