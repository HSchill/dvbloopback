#!/bin/bash

die(){
    echo -en "
\E[1;33;44m$1, aborting...\E[0m

"
    exit 1
}

die_unknown(){
    echo -en "
\E[1;33;44mUnknown option \"$1\".

run ./configure --help for valid options\E[0m

"
    exit 1
}

confirmno(){
    # call with a prompt string or use a default
    read -r -p "${1:-Are you sure? [y/N]} " response
    case $response in
        [yY][eE][sS]|[yY]) 
            true
            ;;
        *)
            false
            ;;
    esac
}

confirmyes(){
    # call with a prompt string or use a default
    read -r -p "${1:-Continue? [Y/n]} " response
    case $response in
        [yY][eE][sS]|[yY]) 
            true
            ;;
        [nN][oO]|[nN])
            false
            ;;
        *)
            true
            ;;
    esac
}

show_help(){
  echo " Usage: ./configure --opt1=<opt> --opt2=<opt>"
  echo "                        "
  echo " Options: [default], if any, in brackets after option."
  echo "                        "
  echo " --help                 Print this message"
  echo "                        "
  echo " --stock=<opt>          [yes] When running a Debian/Ubuntu"
  echo "                        stock kernel, recompile it with"
  echo "                        dvbloopback driver and dvb-core patch"
  echo "                        Only for Debian stable or"
  echo "                        latest Ubuntu LTS"
  echo "                        "
  echo " --vanilla=<bool>       specify a the vanilla kernel version you"
  echo "                        want to compile. Like --vanilla=3.18.12"
  echo "                        This disables --stock option"
  echo "                        "
  echo " --headers=<opt>        [no] yes: install kernel headers package(s)"
  echo "                        "
  echo " --v4l=<opt>            [no] yes: compile current official v4l tree"
  echo "                        against your running kernel"
  echo "                        tbs: compile Luis Alves' TBS driver repo"
  echo "                        Disables --stock= and --vanilla="
  echo "                        "
  echo " --next=<opt>           [no] 4.1 : compile linux-next(4.1 version),"
  echo "                        disables --v4l, --vanilla and --stock"
  echo "                        "
  echo " --adapters=<opt>       [16] Set max number of adapters that are allowed,"
  echo "                        twice the number of physical adapters is needed."
  echo "                        "
  echo " --update=<opt>         [yes] no: don't auto-update or clean this repo"
  echo "                        "
  echo " --abi=<opt>            [900] Debian only kernel version tweak"
  echo "                        "
  echo " --test=<opt>           [no] yes: pause to review each and every step"
  echo "                        "
}

stock_opt="yes"
vanilla_opt=""
headers_opt="no"
v4l_opt="no"
next_opt="no"
adapters_opt="16"
update_opt="yes"
abi_opt="900"
test_opt="no"
personal_opt="yes"

for opt do
  optval="${opt#*=}"
  case "$opt" in
  --help) show_help
  ;;
  --stock=*) stock_opt="$optval"
  ;;
  --vanilla=*) stock_opt="no"; v4l_opt="no"; vanilla_opt="$optval"
  ;;
  --headers=*) headers_opt="$optval"
  ;;
  --v4l=*) stock_opt="no"; vanilla_opt=""; v4l_opt="$optval"
  ;;
  --next=*) stock_opt="no"; v4l_opt="no"; next_opt="$optval"; vanilla_opt="$next_opt"
  ;;
  --adapters=*) adapters_opt="$optval"
  ;;
  --update=*) update_opt="$optval"
  ;;
  --abi=*) abi_opt="$optval"
  ;;
  --test=*) test_opt="$optval"
  ;;
  --personal=*) personal_opt="$optval"
  ;;
  *)
  die_unknown $opt
  ;;
  esac
done

export abi_opt

# Check git status
if [ "x$update_opt" = "xyes" ]; then
  rm -rf linux* > /dev/null 2>&1
  rm -rf media* > /dev/null 2>&1
  git clean -xfd > /dev/null
  git reset --hard HEAD > /dev/null
  git remote update > /dev/null 2>&1
  if ! [ "$?" -eq "0" ]; then
    echo -en "
\E[1;33;44m
###################################

Error(s) encountered while updating

the status from remote git repo.

Aborting...

####################################
\E[0m

"
    exit 1
  fi
  LOCAL=$(git rev-parse @{0})
  REMOTE=$(git rev-parse @{u})
  BASE=$(git merge-base @{0} @{u})

  if [ $LOCAL = $REMOTE ]; then
    GITSTATUS="0"    # "Up-to-date"
  elif [ $LOCAL = $BASE ]; then
    GITSTATUS="1"    # "Need to pull"
  elif [ $REMOTE = $BASE ]; then
    GITSTATUS="2"    # "Need to push"
  else
    GITSTATUS="3"    # "Diverged"
  fi
  if [ "$GITSTATUS" -eq "0" ]; then
    echo "
Your local clone is clean and up-to-date
"
    sleep 3
  elif [ "$GITSTATUS" -eq "1" ]; then
    echo "
Going to sync your local clone with updated remote repo.

"
    sleep 3
    git pull > /dev/null
    if ! [ "$?" -eq 0 ]; then
      echo -en "
\E[1;33;44m
###################################

Error(s) encountered while syncing

local with remote git repo

Aborting...

####################################
\E[0m

"
      exit 1
    else
      echo -en "

############################################################

Synced with remote repo successfully! Please rerun

./configure to complete installation of dvbloopback drivers.

Arrow up and enter will get you there.

############################################################


"
      exit 0
    fi
  elif [ "$GITSTATUS" -eq "2" -o "$GITSTATUS" -eq "3" ]; then
    echo -en "
\E[1;33;44m
#####################################

Your local clone cannot be synced

with remote repo due to local changes

Aborting...

######################################
\E[0m

"
    exit 1
  fi    
fi

# Make sure that we are running as root
if ! echo "$(whoami)" | grep "root" > /dev/null 2>&1; then
  echo -en "
\E[1;33;44m
You should run as root.

Aborting...
\E[0m

"
  exit 0
fi

# Get info on what distro we are running
if [ -f /usr/bin/lsb_release ]; then
  OS=$( lsb_release -si )
  RELEASE=$( lsb_release -sc )
fi

# Check for a supported kernelversion
if [ "x$v4l_opt" = "xyes" -o "x$v4l_opt" = "xtbs" ]; then
  FIRST_DIGIT=$(echo `uname -r` | grep -o '[[:digit:]]\+' | head -n1)
  SECOND_DIGIT=$(echo `uname -r` | grep -o '[[:digit:]]\+' | awk 'NR==2')
  if [ "$FIRST_DIGIT" -lt "4" ]; then
    if [ "$SECOND_DIGIT" -lt "10" ]; then
      echo "
Your running kernel is < 3.10.x

Minimum supported version is 3.10.x

Aborting...
"
      exit 0
    fi
  fi
fi

# Check for proper use uf --stock= flag
if ! [ "$OS" = "Debian" -o "$OS" = "Ubuntu" ]; then
  if [ "x$stock_opt" = "xyes" ]; then
    echo "

Compiling a distro's stock kernel is supported

in Debian and Ubuntu only. You can compile the

v4l tree or a vanilla kernel. Aborting....

"
    exit 0
  fi
fi

# Get build-deps, Debian only.
if [ "$OS" = "Debian" -o "$OS" = "Ubuntu" ]; then
  if uname -a | grep "x86_64" > /dev/null 2>&1; then
    CONFIG="amd64"
  else
    CONFIG="i386"
  fi
  if ! dpkg-query -l build-essential | grep "ii" > /dev/null 2>&1; then
    echo "
Missing dependency build-essential, marking for installation.

"
    apt-get install build-essential -y || die "Error installing dependency build-essential"
  fi
  apt-get build-dep --no-install-recommends linux -y
  if ! [ "$?" -eq "0" ]; then
    echo "
Error(s) while installing build dependencies

Aborting...
"
    exit 1
  fi
  apt-get install kernel-package bin86 devscripts makedumpfile libelf-dev binutils-dev fakeroot crash kernel-wedge libncurses5 libncurses5-dev asciidoc flex bison initramfs-tools patch patchutils libfile-fcntllock-perl libproc-processtable-perl libdigest-sha-perl --no-install-recommends -y
  if ! [ "$?" -eq "0" ]; then
    echo "
Error(s) while installing build dependencies

Aborting...
"
    exit 1
  fi
  if [ "x$v4l_opt" = "xyes" ]; then
    if ! dpkg-query -l linux-headers-`uname -r` | grep "ii" > /dev/null 2>&1; then
      if ! [ -d /lib/modules/`uname -r`/build/drivers ]; then
        apt-get install linux-headers-`uname -r`
      fi
    fi
    if ! [ "$?" -eq "0" ]; then
      echo "
Error(s) while installing build dependencies

Aborting...
"
      exit 1
    fi
  fi
fi

#
# Get the source
#

# Debian
if [ "x$stock_opt" = "xyes" ]; then
  if uname -a | egrep 'Debian|Ubuntu' > /dev/null  2>&1; then
    apt-get source linux-image-`uname -r` -y || die "Error(s) while fetching Debian Linux source"
  else
    apt-get source linux -y || die "Error(s) while fetching Debian Linux source"
  fi
  cd linux-*
  FIRST_DIGIT=$(echo `pwd` | grep -o '[[:digit:]]\+' | head -n1 | awk 'NR==1')
  SECOND_DIGIT=$(echo `pwd` | grep -o '[[:digit:]]\+' | head -n2 | awk 'NR==2')
  if [ "$FIRST_DIGIT" -lt "4" ]; then
    if ! [ "$SECOND_DIGIT" -eq "16" -o "$SECOND_DIGIT" -gt "17" ]; then
      if [ "x$personal_opt" = "xyes" ]; then
        echo "
Building saa716x/dvbsky t982 intree is not supported for your kernel version.

Aborting...
"
        exit 1
      fi
    fi
  fi  
  if [ "x$test_opt" = "xyes" ]; then
    echo "
Source is downloaded.
"
    confirmyes
    if [ "$?" != "0" ]; then
      exit 0
    fi
  fi
fi

# v4l
if [ "x$v4l_opt" = "xyes" ];then
  git clone git://linuxtv.org/media_build.git || die "Error(s) while fetching v4l build system"
  git clone --depth=1 git://linuxtv.org/media_tree.git || die "Error(s) while fetching v4l source tree"
elif [ "x$v4l_opt" = "xtbs" ]; then
  git clone git://github.com/ljalves/media_build.git || die "Error(s) while fetching v4l build system"
  git clone --depth=1 git://github.com/ljalves/linux_media.git -b latest ./media_tree || die "Error(s) while fetching v4l source tree"
  if [ "x$test_opt" = "xyes" ]; then
    echo "
Source is downloaded.
"
    confirmyes
    if [ "$?" != "0" ]; then
      exit 0
    fi
  fi
fi

# Vanilla
if [ "x$vanilla_opt" != "x" ]; then
  MAJOR=$(echo "$vanilla_opt" | cut -d'.' -f1)
  VERSION=$(echo "$vanilla_opt" | cut -d'.' -f2 | cut -d'-' -f1)
  if [ "$MAJOR" -lt "4" ]; then
    if ! [ "$VERSION" -eq "10" -o "$VERSION" -eq "16" ]; then
      if [ "x$personal_opt" = "xyes" ]; then
        MINVERSION="18"
      else
        MINVERSION="10"
      fi
      # Check for minimum supported kernel version
      if [ "$VERSION" -lt "$MINVERSION" ]; then
        echo -en "
\E[1;33;44m
Minimum supported kernel version is linux-3.10.x

Compiling the TBS6281/6285 and DVBSky T982 drivers

intree is supported as of linux-3.18.x kernels.

You requested a build with a $vanilla_opt kernel.

Aborting...
\E[0m

"
        exit 0
      fi
    fi
  fi
  if [ "x$next_opt" = "xno" ]; then
    if echo "$vanilla_opt" | grep "rc" > /dev/null 2>&1; then
      wget https://www.kernel.org/pub/linux/kernel/v$MAJOR.x/testing/linux-$vanilla_opt.tar.xz || die "Error(s) while fetching Linux source"
    else
      wget https://www.kernel.org/pub/linux/kernel/v$MAJOR.x/linux-$vanilla_opt.tar.xz || die "Error(s) while fetching Linux source"
    fi
    tar -xJf linux-$vanilla_opt.tar.xz
    cd linux-$vanilla_opt
    make clean && make mrproper
    if [ "x$test_opt" = "xyes" ]; then
      echo "
Source is downloaded.
"
      confirmyes
      if [ "$?" != "0" ]; then
        exit 0
      fi
    fi
  fi
fi

# linux-next
if ! [ "x$next_opt" = "xno" ]; then
  git clone --depth=1 git://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git ./linux-$next_opt || die "Error(s) while fetching Linux source"
  cd linux-$next_opt
  make clean && make mrproper
  if [ "x$test_opt" = "xyes" ]; then
    echo "
Source is downloaded.
"
    confirmyes
    if [ "$?" != "0" ]; then
      exit 0
    fi
  fi
fi

#
# Patch the source
#

# Common (stock and vanilla kernels)
if [ "x$v4l_opt" = "xno" ]; then
  FIRST_DIGIT=$(echo `pwd` | grep -o '[[:digit:]]\+' | head -n1 | awk 'NR==1')
  SECOND_DIGIT=$(echo `pwd` | grep -o '[[:digit:]]\+' | head -n2 | awk 'NR==2')

  # dvbloopback patch
  mkdir drivers/media/pci/dvbloopback
  cp -f ../dvbloopback/* drivers/media/pci/dvbloopback/
  patch -p0 < ../dvbloopback.patch
  if [ "$FIRST_DIGIT" -lt "4" ]; then
    if [ "$SECOND_DIGIT" -lt "13" ]; then
      patch -p0 < ../3.7-dvb-core.patch
    else
      patch -p0 < ../3.13-dvb-core.patch
    fi
  else
    patch -p0 < ../3.13-dvb-core.patch
  fi
  if [ "x$test_opt" = "xyes" ]; then
    echo "
dvb-core is patched, dvbloopback added.
"
    confirmyes
    if [ "$?" != "0" ]; then
      exit 0
    fi
  fi

  # saa716x patch
  if [ "x$personal_opt" = "xyes" ];then
    mkdir drivers/media/pci/saa716x
    cp -f ../drivers/media/pci/saa716x/* drivers/media/pci/saa716x/
    if [ "$FIRST_DIGIT" -lt "4" ];then
      if [ "$SECOND_DIGIT" -eq "10" ];then
        patch -p0 < ../Kconfig-3.10.patch
      else
        patch -p0 < ../Kconfig.patch
      fi
    else
      patch -p0 < ../Kconfig.patch
    fi
    if [ "x$test_opt" = "xyes" ]; then
      echo "
saa716x added, Kconfig patched for saa716x.
"
      confirmyes
      if [ "$?" != "0" ]; then
        exit 0
      fi
    fi
    if [ "$FIRST_DIGIT" -lt "4" ];then
      if [ "$SECOND_DIGIT" = "16" ]; then
        patch -p0 < ../Makefile-3.16.patch
      elif [ "$SECOND_DIGIT" = "10" ]; then
        patch -p0 < ../Makefile-3.10.patch
      else
        patch -p0 < ../Makefile.patch
      fi
    else
      patch -p0 < ../Makefile.patch
    fi
    if [ "x$test_opt" = "xyes" ]; then
      echo "
Makefile is patched for saa716x.
"
      confirmyes
      if [ "$?" != "0" ]; then
        exit 0
      fi
    fi
  fi

  # cx23885 patch
  if [ "x$personal_opt" = "xyes" ];then
    if [ "$FIRST_DIGIT" -lt "4" ]; then
      if [ "$SECOND_DIGIT" = "18" ]; then
        patch -p0 < ../cx23885-3.18.patch
      elif [ "$SECOND_DIGIT" = "16" ]; then
        patch -p0 < ../cx23885-3.16.patch
      elif [ "$SECOND_DIGIT" = "10" ]; then
        patch -p0 < ../cx23885-3.10.patch
      fi
    elif [ "$FIRST_DIGIT" -eq "4" ]; then
      if [ "$SECOND_DIGIT" -lt "2" ]; then
        patch -p0 < ../cx23885-4.0.patch
      else
        patch -p0 < ../cx23885-gapped-clock.patch
      fi
    elif [ "$FIRST_DIGIT" -gt "4" ]; then
      patch -p0 < ../cx23885-gapped-clock.patch
    fi
    if [ "x$test_opt" = "xyes" ]; then
      echo "
cx23885 patch applied.
"
      confirmyes
      if [ "$?" != "0" ]; then
        exit 0
      fi
    fi
  fi

  if [ "x$personal_opt" = "xyes" ];then
    # silabs si2157 si2168 patch
    if [ "$FIRST_DIGIT" -lt "4" ]; then
      cp -f ../drivers/media/tuners/* drivers/media/tuners/
      cp -f ../drivers/media/dvb-frontends/* drivers/media/dvb-frontends/
    elif [ "$FIRST_DIGIT" -eq "4" ]; then
      if [ "$SECOND_DIGIT" -lt "2" ]; then
        cp -f ../drivers/media/tuners/* drivers/media/tuners/
        cp -f ../drivers/media/dvb-frontends/* drivers/media/dvb-frontends/
      fi
    fi

    # silabs si2168 DVB-C patch
    sed -i 's/SYS_DVBT, SYS_DVBT2, SYS_DVBC_ANNEX_A/SYS_DVBC_ANNEX_A/' drivers/media/dvb-frontends/si2168.c
    if [ "x$test_opt" = "xyes" ]; then
      echo "
silabs si2168 and si2157 patch applied, si2168 is set to DVB-C.
"
      confirmyes
      if [ "$?" != "0" ]; then
        exit 0
      fi
    fi
  fi
fi

# v4l
if [ "x$v4l_opt" = "xyes" -o "x$v4l_opt" = "xtbs" ]; then
  cd media_tree

  # dvbloopback patch
  mkdir drivers/media/pci/dvbloopback
  cp -f ../dvbloopback/* drivers/media/pci/dvbloopback/
  patch -p0 < ../dvbloopback.patch
  if [ "x$test_opt" = "xyes" ]; then
    echo "
dvbloopback module added to source tree.
"
    confirmyes
    if [ "$?" != "0" ]; then
      exit 0
    fi
  fi
  patch -p0 < ../3.13-dvb-core.patch
  if [ "x$test_opt" = "xyes" ]; then
    echo "
dvb-core is patched.
"
    confirmyes
    if [ "$?" != "0" ]; then
      exit 0
    fi
  fi

  if [ "x$personal_opt" = "xyes" ];then
    # saa716x patch
    if [ "x$v4l_opt" = "xyes" ]; then
      mkdir drivers/media/pci/saa716x
      cp -f ../drivers/media/pci/saa716x/* drivers/media/pci/saa716x/
      patch -p0 < ../Kconfig.patch
      if [ "x$test_opt" = "xyes" ]; then
      echo "
saa716x addad, Kconfig patch for saa716x applied.
"
        confirmyes
        if [ "$?" != "0" ]; then
          exit 0
        fi
      fi
      patch -p0 < ../Makefile.patch
      if [ "x$test_opt" = "xyes" ]; then
      echo "
Makefile patch for saa716x applied.
"
        confirmyes
        if [ "$?" != "0" ]; then
          exit 0
        fi
      fi
    fi

    # silabs si2168 DVC-C patch
    sed -i 's/SYS_DVBT, SYS_DVBT2, SYS_DVBC_ANNEX_A/SYS_DVBC_ANNEX_A/' drivers/media/dvb-frontends/si2168.c
  fi

  # commit patches
  git add -A
  git commit -a -m 'Add drivers, patch dvb-core and si2168.'
  if [ "x$test_opt" = "xyes" ]; then
    echo "
Patches are committed to media_tree.
"
    confirmyes
    if [ "$?" != "0" ]; then
      exit 0
    fi
  fi

  cd ../media_build

  # make install patch
  patch -p0 < ../v4l-make-install.patch
  if [ "x$test_opt" = "xyes" ]; then
    echo "
make install patch applied to media_build repo.
"
    confirmyes
    if [ "$?" != "0" ]; then
      exit 0
    fi
  fi

  # commit patch
  git commit -a -m 'Install drivers in /lib/modules/`uname -r`/updates/media'
  if [ "x$test_opt" = "xyes" ]; then
    echo "
Patches are committed to media_build.
"
    confirmyes
    if [ "$?" != "0" ]; then
      exit 0
    fi
  fi
fi

#
# Configure the source
#

# Debian
if [ "x$stock_opt" = "xyes" ]; then
  if [ "$OS" = "Debian" ]; then
    if [ "$abi_opt" = "900" ]; then
      DEBIANKERNEL=$(echo `pwd` | grep -o '[[:digit:]]\+\.[[:digit:]]\+')
      if [ "$CONFIG" = "amd64" ]; then
        RUNNING=$(uname -r | grep "90[0-9]-amd64")
        if [ -d /lib/modules/$DEBIANKERNEL.0-900-amd64 ]; then
          if ! [ -d /lib/modules/$DEBIANKERNEL.0-901-amd64 ]; then
            abi_opt="901"
          elif ! [ -d /lib/modules/$DEBIANKERNEL.0-902-amd64 ]; then
            abi_opt="902"
          elif ! [ -d /lib/modules/$DEBIANKERNEL.0-903-amd64 ]; then
            abi_opt="903"
          elif ! [ -d /lib/modules/$DEBIANKERNEL.0-904-amd64 ]; then
            abi_opt="904"
          elif ! [ -d /lib/modules/$DEBIANKERNEL.0-905-amd64 ]; then
            abi_opt="905"
          elif ! [ -d /lib/modules/$DEBIANKERNEL.0-906-amd64 ]; then
            abi_opt="906"
          elif ! [ -d /lib/modules/$DEBIANKERNEL.0-907-amd64 ]; then
            abi_opt="907"
          elif ! [ -d /lib/modules/$DEBIANKERNEL.0-908-amd64 ]; then
            abi_opt="908"
          elif ! [ -d /lib/modules/$DEBIANKERNEL.0-909-amd64 ]; then
            abi_opt="909"
          else
            if [ "$RUNNING" = "" ]; then
              echo "

You have a total of 10 \"$DEBIANKERNEL.0-90x-amd64\" kernels installed.
Not going to install any more of those, aborting...
"
              exit 0
            else
              echo  "

You have a total of 10 \"$DEBIANKERNEL.0-90x-amd64\" kernels installed.
You are currently running the $RUNNING version of those.
Not going to install any more of those, aborting...
"
              exit 0
            fi 
          fi
        fi
      else
        RUNNING=$(uname -r | grep "90[0-9]-686-pae")
        if [ -d /lib/modules/$DEBIANKERNEL.0-900-686-pae ]; then
          if ! [ -d /lib/modules/$DEBIANKERNEL.0-901-686-pae ]; then
            abi_opt="901"
          elif ! [ -d /lib/modules/$DEBIANKERNEL.0-902-686-pae ]; then
            abi_opt="902"
          elif ! [ -d /lib/modules/$DEBIANKERNEL.0-903-686-pae ]; then
            abi_opt="903"
          elif ! [ -d /lib/modules/$DEBIANKERNEL.0-904-686-pae ]; then
            abi_opt="904"
          elif ! [ -d /lib/modules/$DEBIANKERNEL.0-905-686-pae ]; then
            abi_opt="905"
          elif ! [ -d /lib/modules/$DEBIANKERNEL.0-906-686-pae ]; then
            abi_opt="906"
          elif ! [ -d /lib/modules/$DEBIANKERNEL.0-907-686-pae ]; then
            abi_opt="907"
          elif ! [ -d /lib/modules/$DEBIANKERNEL.0-908-686-pae ]; then
            abi_opt="908"
          elif ! [ -d /lib/modules/$DEBIANKERNEL.0-909-686-pae ]; then
            abi_opt="909"
          else
            if [ "$RUNNING" = "" ]; then
              echo "

You have a total of 10 \"$DEBIANKERNEL.0-90x-686-pae\" kernels installed.
Not going to install any more of those, aborting...
"
              exit 0
            else
              echo  "

You have a total of 10 \"$DEBIANKERNEL.0-90x-686-pae\" kernels installed.
You are currently running the $RUNNING version of those.
Not going to install any more of those, aborting...
"
              exit 0
            fi 
          fi
        fi
      fi
    fi
    _ABINAME=$(cat debian/config/defines | grep 'abiname:' | awk -F"[ ]" '{ print $NF }')
    export _ABINAME
    sed -i "s/abiname: $_ABINAME/abiname: $abi_opt/" debian/config/defines
    sed -i "s/-$_ABINAME/-$abi_opt/g" debian/rules.gen
    fakeroot debian/rules debian/control-real
    sed -i "s/DEBUG='True'/DEBUG='FALSE'/g" debian/rules.gen
    if [ "$CONFIG" = "amd64" ]; then
      fakeroot make -f debian/rules.gen setup_amd64_none_amd64
      sed -i "s/CONFIG_DVB_MAX_ADAPTERS=8/CONFIG_DVB_MAX_ADAPTERS=$adapters_opt/" debian/build/build_amd64_none_amd64/.config
    else
      fakeroot make -f debian/rules.gen setup_i386_none_686-pae_real
      sed -i "s/CONFIG_DVB_MAX_ADAPTERS=8/CONFIG_DVB_MAX_ADAPTERS=$adapters_opt/" debian/build/build_i386_none_686-pae/.config
    fi
    if [ "x$test_opt" = "xyes" ]; then
      echo "
Kernel configured.
"
      confirmyes
      if [ "$?" != "0" ]; then
        exit 0
      fi
    fi
  elif [ "$OS" = "Ubuntu" ]; then
    chmod a+x debian/scripts/*
    chmod a+x debian/scripts/misc/*
    sed -i "s/CONFIG_DVB_MAX_ADAPTERS=8/CONFIG_DVB_MAX_ADAPTERS=$adapters_opt/" debian.*/config/config.common.ubuntu
    sed -i "/CONFIG_DVB_LNBP22=m/a CONFIG_DVB_LOOPBACK_ADAPTER=m" debian.*/config/config.common.ubuntu
    if [ "x$personal_opt" = "xyes" ]; then
      sed -i "/CONFIG_S2IO=m/a CONFIG_SAA716X_SUPPORT=y" debian.*/config/config.common.ubuntu
      sed -i "/CONFIG_SAA716X_SUPPORT=y/a CONFIG_SAA716X_BUDGET=m" debian.*/config/config.common.ubuntu
      sed -i "/CONFIG_DVB_S921=m/a CONFIG_DVB_SAA716X_CORE=m" debian.*/config/config.common.ubuntu
    fi
    fakeroot debian/rules updateconfigs
    UBUNTUKERNEL=$(echo `pwd` | grep -o '[[:digit:]]\+\.[[:digit:]]\+')
    _ABINAME=$(cat debian/changelog | head -1 | grep -o '[[:digit:]]\+' | head -4 | awk 'NR==4')
    export _ABINAME
    if [ "$abi_opt" = "900" ]; then
      RUNNING=$(uname -r | grep "90[0-9]-generic")
      if [ -d /lib/modules/$UBUNTUKERNEL.0-900-generic ]; then
        if ! [ -d /lib/modules/$UBUNTUKERNEL.0-901-generic ]; then
          abi_opt="901"
        elif ! [ -d /lib/modules/$UBUNTUKERNEL.0-902-generic ]; then
          abi_opt="902"
        elif ! [ -d /lib/modules/$UBUNTUKERNEL.0-903-generic ]; then
          abi_opt="903"
        elif ! [ -d /lib/modules/$UBUNTUKERNEL.0-904-generic ]; then
          abi_opt="904"
        elif ! [ -d /lib/modules/$UBUNTUKERNEL.0-905-generic ]; then
          abi_opt="905"
        elif ! [ -d /lib/modules/$UBUNTUKERNEL.0-906-generic ]; then
          abi_opt="906"
        elif ! [ -d /lib/modules/$UBUNTUKERNEL.0-907-generic ]; then
          abi_opt="907"
        elif ! [ -d /lib/modules/$UBUNTUKERNEL.0-908-generic ]; then
          abi_opt="908"
        elif ! [ -d /lib/modules/$UBUNTUKERNEL.0-909-generic ]; then
          abi_opt="909"
        else
          if [ "$RUNNING" = "" ]; then
            echo "

You have a total of 10 \"$UBUNTUKERNEL.0-90x-generic\" kernels installed.
Not going to install any more of those, aborting...
"
            exit 0
          else
            echo  "

You have a total of 10 \"$UBUNTUKERNEL.0-90x-generic\" kernels installed.
You are currently running the $RUNNING version of those.
Not going to install any more of those, aborting...
"
            exit 0
          fi 
        fi
      fi
    fi
    sed -i "s/0-$_ABINAME/0-$abi_opt/g" debian/control
    sed -i "s/0-$_ABINAME/0-$abi_opt/g" debian/control.stub
    sed -i "s/0-$_ABINAME/0-$abi_opt/g" debian/changelog
    sed -i "s/0-$_ABINAME/0-$abi_opt/g" debian.*/control
    sed -i "s/0-$_ABINAME/0-$abi_opt/g" debian.*/control.stub
    sed -i "s/0-$_ABINAME/0-$abi_opt/g" debian.*/changelog
    fakeroot debian/rules clean
    if [ "x$test_opt" = "xyes" ]; then
      echo "
Kernel configured.
"
      confirmyes
      if [ "$?" != "0" ]; then
        exit 0
      fi
    fi
  fi
fi

# v4l
if [ "x$v4l_opt" = "xyes" -o "x$v4l_opt" = "xtbs" ]; then
  make dir DIR=../media_tree
  make distclean
  make allyesconfig
  sed -i "s/CONFIG_DVB_MAX_ADAPTERS=8/CONFIG_DVB_MAX_ADAPTERS=$adapters_opt/" v4l/.config
  sed -i "s/CONFIG_MEDIA_CONTROLLER_DVB=y/# CONFIG_MEDIA_CONTROLLER_DVB is not set/" v4l/.config
  if [ "x$test_opt" = "xyes" ]; then
    echo "
v4l source configured.
"
    confirmyes
    if [ "$?" != "0" ]; then
      exit 0
    fi
  fi
fi

# Vanilla
if [ "x$vanilla_opt" != "x" ]; then
  echo -en "
Going to configure your vanilla kernel.

"
  if [ "$MAJOR" -lt "4" ]; then
    if [ "$VERSION" = "18" ]; then
      echo -en "
Choise: use supplied config file or
do 'make oldconfig'. Do you want to
use supplied kernel config?
If you hit 'n', 'make oldconfig' starts.

"
      confirmyes "Yes, use it. [Y/n]"

      if [ "$?" -eq 0 ]; then
        if [ "$OS" = "Debian" ]; then
          cp -f ../kernelconfig/$CONFIG/3.18/config ./.config
        elif [ "$OS" = "Ubuntu" ]; then
          cp -f ../kernelconfig/$CONFIG/3.18/config-ubuntu ./.config
        fi
      else
        make oldconfig
      fi
    elif [ "$VERSION" = "10" ]; then
      echo -en "
Choise: use supplied config file or
do 'make oldconfig'. Do you want to
use supplied kernel config?
If you hit 'n', 'make oldconfig' starts.

"
      confirmyes "Yes, use it. [Y/n]"

      if [ "$?" -eq 0 ]; then
        cp -f ../kernelconfig/$CONFIG/3.10/config ./.config
      else
      make oldconfig
      fi
    fi
  elif [ "$MAJOR" -lt "5" ]; then
    if [ "$VERSION" = "0" ]; then
      echo -en "
Choise: use supplied config file or
do 'make oldconfig'. Do you want to
use supplied kernel config?
If you hit 'n', 'make oldconfig' starts.

"
      confirmyes "Yes, use it. [Y/n]"

      if [ "$?" -eq 0 ]; then
        if [ "$OS" = "Debian" ]; then
          cp -f ../kernelconfig/$CONFIG/4.0/config ./.config
        elif [ "$OS" = "Ubuntu" ]; then
          cp -f ../kernelconfig/$CONFIG/4.0/config-ubuntu ./.config
        fi
      else
        make oldconfig
      fi
    elif [ "$VERSION" = "1" ]; then
     echo -en "
Choise: use supplied config file or
do 'make oldconfig'. Do you want to
use supplied kernel config?
If you hit 'n', 'make oldconfig' starts.

"
      confirmyes "Yes, use it. [Y/n]"

      if [ "$?" -eq 0 ]; then
        if [ "$OS" = "Debian" ]; then
          cp -f ../kernelconfig/$CONFIG/4.1/config ./.config
        elif [ "$OS" = "Ubuntu" ]; then
          cp -f ../kernelconfig/$CONFIG/4.1/config ./.config
        fi
      else
        make oldconfig
      fi
    else
      make oldconfig
    fi
  else
    make oldconfig
  fi
  ADAPTERS=$(cat .config | grep "CONFIG_DVB_MAX_ADAPTERS" | grep -o '[[:digit:]]\+')
  if ! [ "$ADAPTERS" = "$adapters_opt" ]; then
    sed -i "s/CONFIG_DVB_MAX_ADAPTERS=$ADAPTERS/CONFIG_DVB_MAX_ADAPTERS=$adapters_opt/" .config
  fi
  if cat .config | grep "CONFIG_MEDIA_CONTROLLER_DVB=y" > /dev/null 2>&1; then
    sed -i "s/CONFIG_MEDIA_CONTROLLER_DVB=y/# CONFIG_MEDIA_CONTROLLER_DVB is not set/" .config
  fi
  if [ "x$test_opt" = "xyes" ]; then
    echo "
Kernel configured.
"
    confirmyes
    if [ "$?" != "0" ]; then
      exit 0
    fi
  fi
fi

#
# Compile the source
#

# Debian
if [ "x$stock_opt" = "xyes" ]; then
  if [ "$OS" = "Debian" ]; then
    if [ "$CONFIG" = "amd64" ]; then
      fakeroot make -f debian/rules.gen binary-arch_amd64_none_real
      if [ "x$test_opt" = "xyes" ]; then
        fakeroot make -f debian/rules.gen binary-arch_amd64_none_amd64 > ../build.log
      else
        fakeroot make -j2 -f debian/rules.gen binary-arch_amd64_none_amd64
      fi
    else
      fakeroot make -f debian/rules.gen binary-arch_i386_none_real
      if [ "x$test_opt" = "xyes" ]; then
        fakeroot make -f debian/rules.gen binary-arch_i386_none_686-pae > ../build.log
      else
        fakeroot make -j2 -f debian/rules.gen binary-arch_i386_none_686-pae
      fi
    fi
    if ! [ "$?" -eq "0" ]; then
      echo "
Error(s) while compiling the kernel

Aborting...
"
      exit 1
    fi
    cd ..
    rm -f xen*
  elif [ "$OS" = "Ubuntu" ]; then
    AUTOBUILD=1 NOEXTRAS=1 skipabi=true fakeroot debian/rules binary-headers binary-generic
    if ! [ "$?" -eq "0" ]; then
      echo "
Error(s) while compiling the kernel

Aborting...
"
      exit 1
    fi
    cd ..
    rm -f linux-tools*
    rm -f linux-cloud*
  fi
  if [ "x$test_opt" = "xyes" ]; then
    echo "
Kernel compiled.
"
    confirmyes
    if [ "$?" != "0" ]; then
      exit 0
    fi
  fi
fi

# v4l
if [ "x$v4l_opt" = "xyes" -o "x$v4l_opt" = "xtbs" ]; then
  make
  if ! [ "$?" -eq "0" ]; then
    echo "
Error(s) while compiling the v4l source.
This happens quite often, it is a common upstream problem.

Try again tomorrow, or in a couple of days,
the error(s) will probably be fixed upstream by then.

Aborting...
"
    exit 1
  fi
  if [ "x$test_opt" = "xyes" ]; then
    echo "
v4l source compiled.
"
    confirmyes
    if [ "$?" != "0" ]; then
      exit 0
    fi
  fi
fi

# Vanilla
if [ "x$vanilla_opt" != "x" ]; then
  make-kpkg --rootcmd fakeroot clean
  if [ "x$test_opt" = "xno" ]; then
    export CONCURRENCY_LEVEL=2
    if [ "x$next_opt" = "xno" ]; then
      make-kpkg --rootcmd fakeroot --initrd kernel_image kernel_headers
    else
      make-kpkg --rootcmd fakeroot --initrd kernel_image
    fi
  else
    if [ "x$next_opt" = "xno" ]; then
      make-kpkg --rootcmd fakeroot --initrd kernel_image kernel_headers > ../build.log
    else
      make-kpkg --rootcmd fakeroot --initrd kernel_image > ../build.log
    fi
  fi
  if ! [ "$?" -eq "0" ]; then
    echo "
Error(s) while compiling the kernel

Aborting...
"
    exit 1
  fi
  cd ..
  if [ "x$test_opt" = "xyes" ]; then
    echo "
Kernel compiled.
"
    confirmyes
    if [ "$?" != "0" ]; then
      exit 0
    fi
  fi
fi

#
# Install the result
#

# Debian
if [ "x$stock_opt" = "xyes" ]; then
  if [ "x$headers_opt" = "xyes" ]; then
    dpkg -i *.deb
    apt-get -f install -y
  else
    dpkg -i linux-image-*
  fi
  if [ "$OS" = "Debian" ]; then
    if [ "$CONFIG" = "amd64" ]; then
      echo "

Installed:

linux-image-$DEBIANKERNEL.0-$abi_opt-amd64"
      if [ "x$headers_opt" = "xyes" ]; then
        echo "linux-headers-$DEBIANKERNEL.0-$abi_opt-amd64
linux-headers-$DEBIANKERNEL.0-$abi_opt-common"
      fi
      echo "
All done, you should reboot NOW!

"
    else
      echo "

Installed:

linux-image-$DEBIANKERNEL.0-$abi_opt-686-pae"
      if [ "x$headers_opt" = "xyes" ]; then
        echo "linux-headers-$DEBIANKERNEL.0-$abi_opt-686-pae
linux-headers-$DEBIANKERNEL.0-$abi_opt-common"
      fi
      echo "
All done, you should reboot NOW!

"
    fi
  elif [ "$OS" = "Ubuntu" ]; then
    echo "
Installed:

linux-image-$UBUNTUKERNEL.0-$abi_opt-generic
linux-image-extra-$UBUNTUKERNEL.0-$abi_opt-generic"
    if [ "x$headers_opt" = "xyes" ]; then
      echo "linux-headers-$UBUNTUKERNEL.0-$abi_opt-generic
linux-headers-$UBUNTUKERNEL.0-$abi_opt"
    fi
    echo "
All done, you should reboot NOW!

"
  fi
fi

# v4l
if [ "x$v4l_opt" = "xyes" -o "x$v4l_opt" = "xtbs" ]; then
  confirmno "
v4l source is compiled. Install it? [N/y]
"
  if [ "$?" = "0" ]; then
    if [ -d /lib/modules/`uname -r`/updates/media ]; then
      rm -rf /lib/modules/`uname -r`/updates/media
      depmod -a
    fi
    make install
    cd ..
  fi
fi

# Vanilla
if [ "x$vanilla_opt" != "x" ]; then
  if [ "x$headers_opt" = "xyes" ]; then
    dpkg -i *.deb
  else
    dpkg -i linux-image-*
  fi
  if [ "x$next_opt" = "xno" ]; then
    if echo $vanilla_opt | grep "rc" > /dev/null 2>&1; then
      BUILDLINK="/lib/modules/$(ls -d1 */ | grep "linux" | sed 's/linux-//' | sed 's/-rc/.0-rc/')build"
      SOURCELINK="/lib/modules/$(ls -d1 */ | grep "linux" | sed 's/linux-//' | sed 's/-rc/.0-rc/')source"
      HEADERSDIR="/usr/src/$(ls -d1 */ | grep "linux" | sed 's/linux-/linux-headers-/' | sed 's/-r/.0-r/' | sed 's/\///')"
    elif echo $vanilla_opt | grep -o '[[:digit:]]\+\.[[:digit:]]\+\.[[:digit:]]\+' > /dev/null 2>&1; then
      BUILDLINK="/lib/modules/$(ls -d1 */ | grep "linux" | sed 's/linux-//')build"
      SOURCELINK="/lib/modules/$(ls -d1 */ | grep "linux" | sed 's/linux-//')source"
      HEADERSDIR="/usr/src/$(ls -d1 */ | grep "linux" | sed 's/linux-/linux-headers-/' | sed 's/\///')"
    else
      BUILDLINK="/lib/modules/$(ls -d1 */ | grep "linux" | sed 's/linux-//' | sed 's/\//.0\//')build"
      SOURCELINK="/lib/modules/$(ls -d1 */ | grep "linux" | sed 's/linux-//' | sed 's/\//.0\//')source"
      HEADERSDIR="/usr/src/$(ls -d1 */ | grep "linux" | sed 's/linux-/linux-headers-/' | sed 's/\//.0/')"
    fi
    if [ "x$headers_opt" = "xyes" ]; then
      rm -f $BUILDLINK
      rm -f $SOURCELINK
      ln -s $HEADERSDIR $SOURCELINK
      ln -s $HEADERSDIR $BUILDLINK
    fi
  fi
fi

if [ "x$personal_opt" = "xyes" ]; then
  # Install the firmware
  if [ "x$test_opt" = "xyes" ]; then
    confirmno "
Do you want to install firmware? [N/y]
"
    if [ "$?" = "0" ]; then   
      if [ ! -d /lib/firmware ]; then
        mkdir /lib/firmware
      fi
      cp -f firmware/* /lib/firmware/
    fi
  else
    if [ ! -d /lib/firmware ]; then
      mkdir /lib/firmware
    fi
    cp -f firmware/* /lib/firmware/
  fi
  # Set msi mode for saa716x budget driver
  echo "options saa716x_budget int_type=1" > /etc/modprobe.d/tbs_opensource.conf
fi
