#!/bin/bash

die(){
    echo -en "
\E[1;33;44m$1, aborting...\E[0m

"
    exit 1
}

die_unknown(){
    echo -en "
\E[1;33;44mUnknown option \"$1\".\E[0m

"
    ./configure --help
    exit 1
}

confirmno(){
    # call with a prompt string or use a default
    read -r -p "${1:-Are you sure? [y/N]} " response
    case $response in
        [yY][eE][sS]|[yY]) 
            true
            ;;
        *)
            false
            ;;
    esac
}

confirmyes(){
    # call with a prompt string or use a default
    read -r -p "${1:-Are you sure? [Y/n]} " response
    case $response in
        [yY][eE][sS]|[yY]) 
            true
            ;;
        [nN][oO]|[nN])
            false
            ;;
        *)
            true
            ;;
    esac
}

experimental_api(){
echo -en "
\E[1;33;44m
Your kernel or v4l media stack is compiled with

CONFIG_MEDIA_CONTROLLER_DVB=y, or
CONFIG_MEDIA_CONTROLLER_DVB=m

This is a new and experimental api.

The dvbloopback module will likely
crash your kernel.

You are heading for DISASTER!!!

Recompile your kernel/v4l media stack with:

# CONFIG_MEDIA_CONTROLLER_DVB is not set

Aborting...

Feel free to patch the dvbloopback module
so it can coexist with Mauro's new api.
If you do, please share your patch.
\E[0m

"
exit 1
}

show_help(){
  echo " Usage: ./configure --opt1=<opt> --opt2=<opt>"
  echo "                        "
  echo " Options: [default], if any, in brackets after option."
  echo "                        "
  echo " --help                 Print this message"
  echo "                        "
  echo " --stock=<opt>          [yes] When running a Debian/Ubuntu"
  echo "                        stock kernel, recompile it with"
  echo "                        dvbloopback driver and dvb-core patch"
  echo "                        Only for Debian stable or"
  echo "                        latest Ubuntu LTS"
  echo "                        "
  echo " --vanilla=<bool>       specify a the vanilla kernel version you"
  echo "                        want to compile. Like --vanilla=3.18.12"
  echo "                        This disables --stock option"
  echo "                        "
  echo " --v4l=<opt>            [no] yes: compile current v4l tree"
  echo "                        against your running kernel"
  echo "                        Disables --stock= and --vanilla="
  echo "                        "
  echo " --adapters=<opt>       [16] Set max number of adapters that are allowed,"
  echo "                        twice the number of physical adapters is needed."
  echo "                        "
  echo " --update=<opt>         [yes] no: don't auto-update or clean this repo"
  echo "                        "
  echo " --abi=<opt>            [900] Debian only kernel version tweak"
  echo "                        "
}

stock_opt="yes"
vanilla_opt=""
v4l_opt="no"
adapters_opt="16"
update_opt="yes"
abi_opt="900"

for opt do
  optval="${opt#*=}"
  case "$opt" in
  --help) show_help
  ;;
  --stock=*) stock_opt="$optval"
  ;;
  --vanilla=*) stock_opt="no"; v4l_opt="no"; vanilla_opt="$optval"
  ;;
  --v4l=*) stock_opt="no"; vanilla_opt=""; v4l_opt="$optval"
  ;;
  --adapters=*) adapters_opt="$optval"
  ;;
  --update=*) update_opt="$optval"
  ;;
  --abi=*) abi_opt="$optval"
  ;;
  *)
  die_unknown $opt
  ;;
  esac
done

# Check git status
if [ "x$update_opt" = "xyes" ]; then
  rm -rf linux* > /dev/null 2>&1
  rm -rf media* > /dev/null 2>&1
  git clean -xfd > /dev/null
  git reset --hard HEAD > /dev/null
  git remote update > /dev/null 2>&1
  if ! [ "$?" -eq "0" ]; then
    echo -en "
\E[1;33;44m
###################################

Error(s) encountered while updating

the status from remote git repo.

Aborting...

####################################
\E[0m

"
    exit 1
  fi
  LOCAL=$(git rev-parse @{0})
  REMOTE=$(git rev-parse @{u})
  BASE=$(git merge-base @{0} @{u})

  if [ $LOCAL = $REMOTE ]; then
    GITSTATUS="0"    # "Up-to-date"
  elif [ $LOCAL = $BASE ]; then
    GITSTATUS="1"    # "Need to pull"
  elif [ $REMOTE = $BASE ]; then
    GITSTATUS="2"    # "Need to push"
  else
    GITSTATUS="3"    # "Diverged"
  fi
  if [ "$GITSTATUS" -eq "0" ]; then
    echo "
Your local clone is clean and up-to-date
"
    sleep 3
  elif [ "$GITSTATUS" -eq "1" ]; then
    echo "
Going to sync your local clone with updated remote repo.

"
    sleep 3
    git pull > /dev/null
    if ! [ "$?" -eq 0 ]; then
      echo -en "
\E[1;33;44m
###################################

Error(s) encountered while syncing

local with remote git repo

Aborting...

####################################
\E[0m

"
      exit 1
    else
      echo -en "

############################################################

Synced with remote repo successfully! Please rerun

./configure to complete installation of dvbloopback drivers.

Arrow up and enter will get you there.

############################################################


"
      exit 0
    fi
  elif [ "$GITSTATUS" -eq "2" -o "$GITSTATUS" -eq "3" ]; then
    echo -en "
\E[1;33;44m
#####################################

Your local clone cannot be synced

with remote repo due to local changes

Aborting...

######################################
\E[0m

"
    exit 1
  fi    
fi

# Make sure that we are running as root
if ! echo "$(whoami)" | grep "root" > /dev/null 2>&1; then
  echo -en "
\E[1;33;44m
You should run as root.

Aborting...
\E[0m

"
  exit 0
fi

# Get build-deps, Debian only.
if [ -f /usr/bin/lsb_release ]; then
  OS=$( lsb_release -si )
  RELEASE=$( lsb_release -sc )
fi

if ! [ "$OS" = "Debian" ] ; then
  stock_opt=no
else
  if ! dpkg-query -l build-essential | grep "ii" > /dev/null 2>&1; then
    echo "
Missing dependency build-essential, marking for installation.

"
    apt-get install build-essential -y || die "Error installing dependency build-essential"
  fi
  apt-get build-dep --no-install-recommends linux -y
  if ! [ "$?" -eq "0" ]; then
    echo "
Error(s) while installing build dependencies

Aborting...
"
    exit 1
  fi
  apt-get install kernel-package bin86 devscripts makedumpfile libelf-dev binutils-dev fakeroot crash kernel-wedge libncurses5 libncurses5-dev asciidoc flex bison initramfs-tools patch patchutils libfile-fcntllock-perl libproc-processtable-perl libdigest-sha-perl --no-install-recommends -y
  if ! [ "$?" -eq "0" ]; then
    echo "
Error(s) while installing build dependencies

Aborting...
"
    exit 1
  fi
  apt-get install linux-headers-amd64
  if ! [ "$?" -eq "0" ]; then
    echo "
Error(s) while installing build dependencies

Aborting...
"
    exit 1
  fi
  if ! [ "$RELEASE" = "jessie" ];then
    if [ "x$stock_opt" = "xyes" ]; then
      echo "
Recompiling a stock kernel is only supported in

Debian Stable (Jessie)

You can choose to compile a vanilla kernel or the v4l tree.

Aborting...
"
      exit 1
    fi
  fi
  if [ "x$stock_opt" = "xno" ]; then
    if [ "x$vanilla_opt" = "x" ] && [ "x$v4l_opt" = "xno" ]; then
      echo "
You should use either the --vanilla= or the --v4l= flag.

Aborting...
"
      exit 1
    fi
  fi
fi

#
# Get the source
#

# Debian
if [ "x$stock_opt" = "xyes" ]; then
  apt-get -t jessie source linux -y || die "Error(s) while fetching Debian Linux source"
  cd linux-*
fi

# v4l
if [ "x$v4l_opt" = "xyes" ];then
  git clone git://linuxtv.org/media_build.git || die "Error(s) while fetching v4l build system"
  git clone --depth=1 git://linuxtv.org/media_tree.git || die "Error(s) while fetching v4l source tree"
fi

# Vanilla
if [ "x$vanilla_opt" != "x" ];then
  MAJOR=$(echo "$vanilla_opt" | cut -d'.' -f1)
  VERSION=$( echo "$vanilla_opt" | cut -d'.' -f2 | cut -d'-' -f1 )
  MINVERSION="18"
  # Check for minimum supported kernel version to build with
  # (should be 3.18 or up)
  if [ "$MAJOR" -lt "4" ]; then
    if ! [ "$VERSION" -eq "10" ]; then
      if [ "$VERSION" -lt "$MINVERSION" ]; then
        echo -en "
\E[1;33;44m
This TBS6281/6285 driver is supported intree as of 3.18.x kernels.

(With the exeption of 3.10.x kernels)

You requested a build with a $vanilla_opt kernel.

Aborting...
\E[0m

"
        exit 0
      fi
    fi
  fi
  if ! echo "$vanilla_opt" | grep "rc" > /dev/null 2>&1; then
    wget https://www.kernel.org/pub/linux/kernel/v$MAJOR.x/linux-$vanilla_opt.tar.xz || die "Error(s) while fetching Linux source"
  else
    wget https://www.kernel.org/pub/linux/kernel/v4.x/testing/linux-$vanilla_opt.tar.xz || die "Error(s) while fetching Linux source"
  fi
  tar -xJf linux-$vanilla_opt.tar.xz
  cd linux-$vanilla_opt
  make clean && make mrproper
fi

#
# Patch the source
#

# Common (stock and vanilla kernels)
if [ "x$v4l_opt" = "xno" ]; then
  FIRST_DIGIT=$(echo `pwd` | grep -o '[[:digit:]]\+' | head -n1 | awk 'NR==1')
  SECOND_DIGIT=$(echo `pwd` | grep -o '[[:digit:]]\+' | head -n2 | awk 'NR==2')

  # dvbloopback patch
  mkdir drivers/media/pci/dvbloopback
  cp -f ../dvbloopback/* drivers/media/pci/dvbloopback/
  patch -p0 < ../dvbloopback.patch
  if [ "$FIRST_DIGIT" -lt "4" ] && [ "$SECOND_DIGIT" -lt "13" ]; then
    patch -p0 < ../3.7-dvb-core.patch
  else
    patch -p0 < ../3.13-dvb-core.patch
  fi

  # saa716x patch, also contains gapped clock patch
  mkdir drivers/media/pci/saa716x
  cp -f ../drivers/media/pci/saa716x/* drivers/media/pci/saa716x/
  if ! [ "$VERSION" = "10" ]; then
    patch -p0 < ../Kconfig.patch
  else
    patch -p0 < ../Kconfig-3.10.patch
  fi
  if [ "$SECOND_DIGIT" = "16" ]; then
    patch -p0 < ../Makefile-3.16.patch
  elif [ "$SECOND_DIGIT" = "10" ]; then
    patch -p0 < ../Makefile-3.10.patch
  else
    patch -p0 < ../Makefile.patch
  fi
  patch -p0 < ../uapi.patch

  # cx23885 patch, also contains gapped clock patch
  if [ "$FIRST_DIGIT" -lt "4" ]; then
    if [ "$SECOND_DIGIT" = "19" ]; then
      patch -p0 < ../cx23885-3.19.patch
    elif [ "$SECOND_DIGIT" = "18" ]; then
      patch -p0 < ../cx23885-3.18.patch
    elif [ "$SECOND_DIGIT" = "16" ]; then
      patch -p0 < ../cx23885-3.16.patch
    elif [ "$SECOND_DIGIT" = "10" ]; then
      patch -p0 < ../cx23885-3.10.patch
    fi
  else
    patch -p0 < ../cx23885-4.0.patch
  fi

  # silabs si2157 si2168 patch, also contains gapped clock patch
  cp -f ../drivers/media/tuners/* drivers/media/tuners/
  cp -f ../drivers/media/dvb-frontends/* drivers/media/dvb-frontends/

  # silabs si2168 DVB-C patch
  sed -i 's/SYS_DVBT, SYS_DVBT2, SYS_DVBC_ANNEX_A/SYS_DVBC_ANNEX_A/' drivers/media/dvb-frontends/si2168.c

  # If linux source >= 4.2 patch saa716x with IF patch
  #if [ "$FIRST_DIGIT" -eq "4" ] && [ "$SECOND_DIGIT" -gt "1" ]; then
  #  patch -p0 < ../saa716x_IF.patch
  #fi
fi

# v4l
if [ "x$v4l_opt" = "xyes" ]; then
  cd media_tree

  # dvbloopback patch
  mkdir drivers/media/pci/dvbloopback
  cp -f ../dvbloopback/* drivers/media/pci/dvbloopback/
  patch -p0 < ../dvbloopback.patch
  patch -p0 < ../3.13-dvb-core.patch

  # saa716x patch, also contains gapped clock patch
  mkdir drivers/media/pci/saa716x
  cp -f ../drivers/media/pci/saa716x/* drivers/media/pci/saa716x/
  patch -p0 < ../Kconfig.patch
  patch -p0 < ../Makefile.patch

  # silabs si2168 gapped clock patch
  cp -f ../drivers/media/tuners/* drivers/media/tuners/
  cp -f ../drivers/media/dvb-frontends/* drivers/media/dvb-frontends/

  # silabs si2168 DVC-C patch
  sed -i 's/SYS_DVBT, SYS_DVBT2, SYS_DVBC_ANNEX_A/SYS_DVBC_ANNEX_A/' drivers/media/dvb-frontends/si2168.c

  # cx23885 gapped clock patch
  patch -p0 < ../cx23885-4.0.patch

  # commit patches
  git add -A
  git commit -a -m 'Add drivers, patch dvb-core and si2168.'


  cd ../media_build

  # make install patch
  patch -p0 < ../v4l-make-install.patch

  # commit patch
  git commit -a -m 'Install drivers in /lib/modules/`uname -r`/updates/media'
fi

#
# Configure the source
#

# Debian
if [ "x$stock_opt" = "xyes" ]; then
  if [ "$abi_opt" = "900" ]; then
    DEBIANKERNEL=$(echo `pwd` | grep -o '[[:digit:]]\+\.[[:digit:]]\+')
    RUNNING=$(uname -r | grep "90[0-9]-amd64")
    if [ -d /lib/modules/$DEBIANKERNEL.0-900-amd64 ]; then
      if ! [ -d /lib/modules/$DEBIANKERNEL.0-901-amd64 ]; then
        abi_opt=901
      elif ! [ -d /lib/modules/$DEBIANKERNEL.0-902-amd64 ]; then
        abi_opt=902
      elif ! [ -d /lib/modules/$DEBIANKERNEL.0-903-amd64 ]; then
        abi_opt=903
      elif ! [ -d /lib/modules/$DEBIANKERNEL.0-904-amd64 ]; then
        abi_opt=904
      elif ! [ -d /lib/modules/$DEBIANKERNEL.0-905-amd64 ]; then
        abi_opt=905
      elif ! [ -d /lib/modules/$DEBIANKERNEL.0-906-amd64 ]; then
        abi_opt=906
      elif ! [ -d /lib/modules/$DEBIANKERNEL.0-907-amd64 ]; then
        abi_opt=907
      elif ! [ -d /lib/modules/$DEBIANKERNEL.0-908-amd64 ]; then
        abi_opt=908
      elif ! [ -d /lib/modules/$DEBIANKERNEL.0-909-amd64 ]; then
        abi_opt=909
      else
        if [ "$RUNNING" = "" ]; then
          echo "

You have a total of 10 \"$DEBIANKERNEL.0-90x-amd64\" kernels installed.
Not going to install any more of those, aborting...
"
          exit 0
        else
          echo  "

You have a total of 10 \"$DEBIANKERNEL.0-90x-amd64\" kernels installed.
You are currently running the $RUNNING version of those.
Not going to install any more of those, aborting...
"
          exit 0
        fi 
      fi
    fi
  fi
  _ABINAME=$(cat debian/config/defines | grep 'abiname:' | awk -F"[ ]" '{ print $NF }')
  export _ABINAME
  sed -i "s/abiname: $_ABINAME/abiname: $abi_opt/" debian/config/defines
  sed -i "s/-$_ABINAME/-$abi_opt/g" debian/rules.gen
  fakeroot debian/rules debian/control-real
  sed -i "s/DEBUG='True'/DEBUG='FALSE'/g" debian/rules.gen
  fakeroot make -f debian/rules.gen setup_amd64_none_amd64
  sed -i "s/CONFIG_DVB_MAX_ADAPTERS=8/CONFIG_DVB_MAX_ADAPTERS=$adapters_opt/" debian/build/build_amd64_none_amd64/.config
fi

# v4l
if [ "x$v4l_opt" = "xyes" ]; then
  make dir DIR=../media_tree
  make distclean
  make allyesconfig
  sed -i "s/CONFIG_DVB_MAX_ADAPTERS=8/CONFIG_DVB_MAX_ADAPTERS=$adapters_opt/" v4l/.config
  sed -i "s/CONFIG_MEDIA_CONTROLLER_DVB=y/# CONFIG_MEDIA_CONTROLLER_DVB is not set/" v4l/.config
fi

# Vanilla
if [ "x$stock_opt" = "xno" ]; then
  echo -en "
Going to configure your vanilla kernel.

"
  if [ "$MAJOR" -lt "4" ]; then
    if [ "$VERSION" = "19" ]; then
      echo -en "
Choise: use supplied config file or
do 'make oldconfig'. Do you want to
use supplied kernel config?
If you hit 'n', 'make oldconfig' starts.

"
      confirmyes "Yes, use it. [Y/n]"

      if [ "$?" -eq 0 ]; then
        cp -f ../kernelconfig/amd64/3.19/config ./.config
      else
        make oldconfig
      fi
    elif [ "$VERSION" = "18" ]; then
      echo -en "
Choise: use supplied config file or
do 'make oldconfig'. Do you want to
use supplied kernel config?
If you hit 'n', 'make oldconfig' starts.

"
      confirmyes "Yes, use it. [Y/n]"

      if [ "$?" -eq 0 ]; then
        cp -f ../kernelconfig/amd64/3.18/config ./.config
      else
        make oldconfig
      fi
    elif [ "$VERSION" = "10" ]; then
      echo -en "
Choise: use supplied config file or
do 'make oldconfig'. Do you want to
use supplied kernel config?
If you hit 'n', 'make oldconfig' starts.

"
      confirmyes "Yes, use it. [Y/n]"

      if [ "$?" -eq 0 ]; then
        cp -f ../kernelconfig/amd64/3.10/config ./.config
      else
        make oldconfig
      fi
    fi
  elif [ "$MAJOR" -lt "5" ]; then
    if [ "$VERSION" = "0" ]; then
      echo -en "
Choise: use supplied config file or
do 'make oldconfig'. Do you want to
use supplied kernel config?
If you hit 'n', 'make oldconfig' starts.

"
      confirmyes "Yes, use it. [Y/n]"

      if [ "$?" -eq 0 ]; then
        cp -f ../kernelconfig/amd64/4.0/config ./.config
      else
        make oldconfig
      fi
    else
      make oldconfig
    fi
  else    
    make oldconfig
  fi
  ADAPTERS=$( cat .config | grep "CONFIG_DVB_MAX_ADAPTERS" | grep -o '[[:digit:]]\+' )
  if ! [ "$ADAPTERS" = "$adapters_opt" ]; then
    sed -i "s/CONFIG_DVB_MAX_ADAPTERS=$ADAPTERS/CONFIG_DVB_MAX_ADAPTERS=$adapters_opt/" .config
  fi
  if cat .config | grep "CONFIG_MEDIA_CONTROLLER_DVB=y" > /dev/null 2>&1; then
    sed -i "s/CONFIG_MEDIA_CONTROLLER_DVB=y/# CONFIG_MEDIA_CONTROLLER_DVB is not set/" .config
  fi
fi

#
# Compile the source
#

# Debian
if [ "x$stock_opt" = "xyes" ]; then
  fakeroot make -f debian/rules.gen binary-arch_amd64_none_real
  fakeroot make -f debian/rules.gen binary-arch_amd64_none_amd64
  if ! [ "$?" -eq "0" ]; then
    echo "
Error(s) while compiling the kernel

Aborting...
"
    exit 1
  fi
  cd ..
  rm -f xen*
fi

# v4l
if [ "x$v4l_opt" = "xyes" ]; then
  make
  if ! [ "$?" -eq "0" ]; then
    echo "
Error(s) while compiling the v4l source.
This is not uncommon.

Try again tomorrow, or in a couple of days,
the error(s) will probably be fixed upstream by then.

Aborting...
"
    exit 1
  fi
fi

# Vanilla
if [ "x$v4l_opt" = "xno" ] && [ "x$stock_opt" = "xno" ]; then
  make-kpkg --rootcmd fakeroot clean
  make-kpkg --rootcmd fakeroot --initrd kernel_image kernel_headers
  if ! [ "$?" -eq "0" ]; then
    echo "
Error(s) while compiling the kernel

Aborting...
"
    exit 1
  fi
  cd ..
fi

#
# Install the result
#

# Debian
if [ "x$stock_opt" = "xyes" ]; then
  dpkg -i *.deb
  apt-get -f install
  echo "
Installed:

linux-image-$DEBIANKERNEL.0-$abi_opt-amd64
linux-headers-$DEBIANKERNEL.0-$abi_opt-amd64
linux-headers-$DEBIANKERNEL.0-$abi_opt-common

All done, you should reboot NOW!

"
fi

# v4l
if [ "x$v4l_opt" = "xyes" ]; then
  confirmno "
v4l source is compiled. Install it? [N/y]
"
  if [ "$?" = "0" ]; then
    if [ -d /lib/modules/`uname -r`/updates/media ]; then
      rm -rf /lib/modules/`uname -r`/updates/media
      depmod -a
    fi
    make install
  fi
fi

# Vanilla
if [ "x$v4l_opt" = "xno" ] && [ "x$stock_opt" = "xno" ]; then
  dpkg -i *.deb
  if echo $vanilla_opt | grep "rc" > /dev/null 2>&1; then
    BUILDLINK="/lib/modules/$(ls -d1 */ | grep "linux" | sed 's/linux-//' | sed 's/-rc/.0-rc/')build"
    SOURCELINK="/lib/modules/$(ls -d1 */ | grep "linux" | sed 's/linux-//' | sed 's/-rc/.0-rc/')source"
    HEADERSDIR="/usr/src/$(ls -d1 */ | grep "linux" | sed 's/linux-/linux-headers-/' | sed 's/-r/.0-r/' | sed 's/\///')"
  elif echo $vanilla_opt | grep -o '[[:digit:]]\+\.[[:digit:]]\+\.[[:digit:]]\+' > /dev/null 2>&1; then
    BUILDLINK="/lib/modules/$(ls -d1 */ | grep "linux" | sed 's/linux-//')build"
    SOURCELINK="/lib/modules/$(ls -d1 */ | grep "linux" | sed 's/linux-//')source"
    HEADERSDIR="/usr/src/$(ls -d1 */ | grep "linux" | sed 's/linux-/linux-headers-/' | sed 's/\///')"
  else
    BUILDLINK="/lib/modules/$(ls -d1 */ | grep "linux" | sed 's/linux-//' | sed 's/\//.0\//')build"
    SOURCELINK="/lib/modules/$(ls -d1 */ | grep "linux" | sed 's/linux-//' | sed 's/\//.0\//')source"
    HEADERSDIR="/usr/src/$(ls -d1 */ | grep "linux" | sed 's/linux-/linux-headers-/' | sed 's/\//.0/')"
  fi
  rm -f $BUILDLINK
  rm -f $SOURCELINK
  ln -s $HEADERSDIR $SOURCELINK
  ln -s $HEADERSDIR $BUILDLINK
fi
