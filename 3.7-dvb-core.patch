--- drivers/media/dvb-core/dvbdev.c	2015-10-01 12:07:55.000000000 +0200
+++ drivers/media/dvb-core/dvbdev.c	2015-10-10 06:35:39.855272923 +0200
@@ -32,6 +32,7 @@
 #include <linux/fs.h>
 #include <linux/cdev.h>
 #include <linux/mutex.h>
+#include <linux/dvb/frontend.h>
 #include "dvbdev.h"
 
 static DEFINE_MUTEX(dvbdev_mutex);
@@ -68,7 +69,6 @@
 {
 	struct dvb_device *dvbdev;
 
-	mutex_lock(&dvbdev_mutex);
 	down_read(&minor_rwsem);
 	dvbdev = dvb_minors[iminor(inode)];
 
@@ -91,12 +91,10 @@
 		}
 		fops_put(old_fops);
 		up_read(&minor_rwsem);
-		mutex_unlock(&dvbdev_mutex);
 		return err;
 	}
 fail:
 	up_read(&minor_rwsem);
-	mutex_unlock(&dvbdev_mutex);
 	return -ENODEV;
 }
 
@@ -388,6 +386,8 @@
 	void    *mbuf = NULL;
 	void    *parg = NULL;
 	int     err  = -EINVAL;
+	struct  dtv_properties *tvps = NULL;
+	struct  dtv_property *tvp = NULL;
 
 	/*  Copy arguments into temp kernel buffer  */
 	switch (_IOC_DIR(cmd)) {
@@ -414,6 +414,23 @@
 		err = -EFAULT;
 		if (copy_from_user(parg, (void __user *)arg, _IOC_SIZE(cmd)))
 			goto out;
+		if ((cmd == FE_SET_PROPERTY) || (cmd == FE_GET_PROPERTY)) {
+		    tvps = (struct dtv_properties __user *)arg;
+		    tvp = (struct dtv_property *) kmalloc(tvps->num *
+			sizeof(struct dtv_property), GFP_KERNEL);
+		    if (!tvp){
+			err = -ENOMEM;
+			goto out;
+		    }
+		    if (copy_from_user(tvp, tvps->props, 
+			(tvps->num) * sizeof(struct dtv_property))) {
+			err = -EFAULT;
+			goto out;
+		    }
+		    tvps = (struct dtv_properties __user *)parg;
+		    tvps->props = tvp;
+		    tvp = NULL;
+		}
 		break;
 	}
 
@@ -429,6 +446,18 @@
 	{
 	case _IOC_READ:
 	case (_IOC_WRITE | _IOC_READ):
+		if ((cmd == FE_GET_PROPERTY) || (cmd == FE_SET_PROPERTY)) 
+		{
+		    tvps = (struct dtv_properties __user *)arg;
+		    tvp = tvps->props;
+		    tvps = (struct dtv_properties __user *)parg;
+		    if (copy_to_user(tvp, tvps->props, tvps->num * 
+			    sizeof(struct dtv_property))) {
+ 			err = -EFAULT;
+			goto out;
+		    }
+		    tvps->props = tvp;
+		}
 		if (copy_to_user((void __user *)arg, parg, _IOC_SIZE(cmd)))
 			err = -EFAULT;
 		break;
@@ -438,6 +467,7 @@
 	kfree(mbuf);
 	return err;
 }
+EXPORT_SYMBOL(dvb_usercopy);
 
 static int dvb_uevent(struct device *dev, struct kobj_uevent_env *env)
 {
